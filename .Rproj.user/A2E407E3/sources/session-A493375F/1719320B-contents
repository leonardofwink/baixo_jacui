---
title: "TCC"
author: "Leonardo Fernandes Wink"
date: "`r format(Sys.time(), '%d/%m/%Y')`"
output:
  html_document: 
    highlight: haddock
    keep_md: yes
    number_sections: yes
    theme: flatly
    toc: yes
    toc_float:
      collapsed: no
      smooth_scroll: no
    fig_width: 10
    fig_height: 6.66
    fig_caption: yes
    code_download: true
  pdf_document:
    toc: yes
  word_document: 
    toc: yes
    keep_md: yes
always_allow_html: yes
editor_options: 
  chunk_output_type: console
fig.align: center
---

```{r Rotina pra toda vez que abrir o documento, echo = FALSE}
# Abrir o GitHub Desktop
# Abrir o RStudio
# Verificar se estão 
```

# Anotações de coisas por fazer:

* Descobrir como colocar as estações no sentido correto montante -> jusante nos sumários
* not entirely necessary pq tenho os sumários mais aprimorados ainda no excel.

> 87398500, 87398980, 87398900, 87398950, 87405500, 87406900, 87409900

* ~~Aprender a segmentar o meu dataset por períodos~~
* ~~aprender a criar uma nova coluna com a segmentação dos períodos~~
* aprender a colocar a legenda dentro do gráfico
  * reduzir o tamanho da legenda
* ~~corrigir os valores 0 de IQA pra NA~~
* descobrir como conseguir a equação do lm
* ~~aprender a pivotar o sumário~~ -> meu sumário do google docs ta batendo direitinho com o do R
* descobrir se há outros TCCs com disponibilização de códigos
* correlação forte entre condutividade e Namon/Ptot/DBO



| 1990-2000 | 2000-2010 | 2010-2020 |
| :-------: | :-------: | :-------: |
| 1990-2000 | 2000-2010 | 2010-2020 |



# Instalar os pacotes
```{r instalar pacotes}
# install.packages(tidyverse)
```

## acessar os pacotes
```{r Acessar os pacotes, message = FALSE, warning = TRUE}
library(readr)
library(rmarkdown)
library(qboxplot)
library(readxl)
library(pillar)
library(dplyr)
library(tidyverse)
library(gapminder)
library(knitr)
library(kableExtra)
library(ggpubr)
library(gridExtra)
library(modelsummary)
library(gtsummary)
```

## importando a planilha
```{r Importando a planilha, echo = FALSE, message = TRUE, warning = FALSE}

plan_wide_19902020 <- read_delim("C:/Users/Léo/Desktop/TCC/TCC_github/TCC_gh/plan_wide_19902020.tsv",
    delim = "\t", escape_double = FALSE,
    col_types = cols(Alcalinidade = col_double(),
        CODIGO = col_character(), COORD_GEO_LAT_GRAU = col_double(),
        COORD_GEO_LONG_GRAU = col_double(),
        DATA_COLETA = col_date(format = "%d/%m/%Y"),
        Nitrato = col_double(), Nitrito = col_double(),
        SDT = col_double(), SST = col_double(),
        `Vazão` = col_double(), `Vazão rio` = col_double()),
    locale = locale(date_names = "pt", decimal_mark = ",",
        grouping_mark = ""), trim_ws = TRUE)

```

```{r Importando a planilha2, message = TRUE, warning = FALSE}
# 
# plan_wide_19902020 <- read_delim("C:/Users/maria/OneDrive/Área de Trabalho/Amor/TCC_gh/plan_wide_19902020.tsv", 
#     delim = "\t", escape_double = FALSE, 
#     col_types = cols(Alcalinidade = col_double(), 
#         CODIGO = col_character(), COORD_GEO_LAT_GRAU = col_double(), 
#         COORD_GEO_LONG_GRAU = col_double(), 
#         DATA_COLETA = col_date(format = "%d/%m/%Y"), 
#         Nitrato = col_double(), Nitrito = col_double(), 
#         SDT = col_double(), SST = col_double(), 
#         `Vazao` = col_double(), `Vazao rio` = col_double()), 
#     locale = locale(date_names = "pt", decimal_mark = ",", 
#         grouping_mark = ""), trim_ws = TRUE)

```

```{r Mostrando os dados, layout="l-body-outset", echo = FALSE}
# library(rmarkdown)
# kable(head(plan_wide_19902020),format = "html") %>% 
#   kable_styling(full_width = FALSE,
#                 bootstrap_options = c("striped", "hover", "condensed", "responsive"))
```


```{r Visualização da planilha importada, echo = FALSE}
paged_table(plan_wide_19902020,
           options = list(rows.print = 15,
                          cols.print = 10))
```


```{r Códigos Git, echo = FALSE}
# cd myrepo
# ls
# head README.md
# git status
# git add README.md
# git commit -m "A commit from my local computer"
# 
# cd .. # voltar pro diretório acima
# rm -rf myrepo/ #remover/apagar a pasta myrepo
```

```{r Aprendendo Git, echo = FALSE}
# slides da bia que ajudam mt
# https://beatrizmilz.github.io/slidesR/git_rstudio/11-2021-ENCE.html#20
# aprendendo a sincronizar usando esse guia -> 
# https://happygitwithr-com.translate.goog/push-pull-github.html?_x_tr_sl=auto&_x_tr_tl=pt&_x_tr_hl=pt-BR
# library(usethis)
# usethis::create_github_token() criar um código pra acesso e sincronização between R e github

# gitcreds::gitcreds_set() 
# 
# use_git_config(user.name = "leonardofwink",
#                user.email = "leonardofwink@gmail.com")
# usethis::gh_token_help()

# Como mostrar os dados de um arquivo via Git/GitHub
# git clone https://github.com/leonardofwink/myrepo.git
# cd myrepo #acessa a pasta myrepo
# ls #lista os arquivos da pasta 
# head README.md #mostra as primeiras observações do arquivo

# Como mostrar os dados de um arquivo via R
# head(C:/Users/Léo/myrepo/README.md)

# Adicionar uma linha ao README.md e verificar se o Git percebe a mudança
# echo "A line I wrote on my local computer" >> README.md
# git status
## C:\Users\Léo\myrepo>git status
## On branch main
## Your branch is up to date with 'origin/main'.
## 
## Changes not staged for commit:
##   (use "git add <file>..." to update what will be committed)
##   (use "git restore <file>..." to discard changes in working directory)
##         **modified:   README.md**
## 
## no changes added to commit (use "git add" and/or "git commit -a")
```


## Parâmetros físico-químicos

### Oxigênio Dissolvido

```{r Gráfico OD periodo 1, echo = FALSE, warning=FALSE, message = FALSE, fig.cap="Oxigênio Dissolvido no período 1990-2000"}
(od_p1 <-ggplot(plan_wide_19902020 %>% 
                  filter(ANO_COLETA>"1990" &
                           ANO_COLETA<="2000"),
                aes(CODIGO,
                    `Oxigênio dissolvido`))+
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=-Inf,
            ymax=2,
            alpha=1,
            fill="#ac5079")+ #>pior classe
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=2,
            ymax=4,
            alpha=1,
            fill="#eb5661")+ #classe 4
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=4,
            ymax=5,
            alpha=1,
            fill="#fcf7ab")+ #classe 3
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=5,
            ymax=6,
            alpha=1,
            fill="#70c18c")+ #classe 2
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=6,
            ymax=Inf,
            alpha=1,
            fill="#8dcdeb")+ #classe 1
   stat_boxplot(geom = 'errorbar',
                width=0.3,
                position = position_dodge(width = 0.65))+
   geom_boxplot(fill='#F8F8FF',
                color="black",
                outlier.shape = 1, #se deixar NA fica só o jitter, se não, deixa 1
                width= 0.7)+
   labs(title = "Oxigênio Dissolvido no período 1990-2000",
        x="Estação",
        y="mg/L")+
   # geom_jitter(width = .05,
   #             alpha=.2,
   #             size=1.5,
   #             color="black")+
   scale_y_continuous(expand = expansion(mult = c(0,0)),
                      n.breaks = 11,
                      limits = c(-1,21))+
   scale_x_discrete(limits = c("87398500", "87398980", "87398900", "87398950", "87405500", "87406900", "87409900"))+
   geom_smooth(method = "lm",
               se=FALSE, #se deixar TRUE gera o intervalo de confiança de 95%
               aes(group=1),
               alpha=.5,
               na.rm = TRUE,
               size = 1)+
   # geom_line(
   #   aes(color="red"),
   #   alpha=.0)+
   # scale_color_manual("Legenda",
   #                    guide="legend",
   #                    values = c("Classe 1"="#8dcdeb",
   #                               "Classe 2"="#70c18c",
   #                               "Classe 3"="#fcf7ab",
   #                               "Classe 4"="#eb5661",
   #                               "Pior Classe"="#ac5079"))+
   # guides(color=guide_legend(override.aes = list(linetype=c(1,1,1,1,1),
   #                                               lwd=c(2,2,2,2,2),
   #                                               shape=c(NA,NA,NA,NA,NA),
   #                                               alpha=1)))+
   theme(legend.position = c("87405500", 15))+
   theme_classic())

```

```{r Gráfico OD periodo 2, echo = FALSE, warning=FALSE, message = FALSE}

(od_p2 <-ggplot(plan_wide_19902020 %>% 
                       filter(ANO_COLETA>"2000" &
                              ANO_COLETA<="2010"),
                     aes(CODIGO,
                         `Oxigênio dissolvido`))+
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=-Inf,
            ymax=2,
            alpha=1,
            fill="#ac5079")+ #>pior classe
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=2,
            ymax=4,
            alpha=1,
            fill="#eb5661")+ #classe 4
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=4,
            ymax=5,
            alpha=1,
            fill="#fcf7ab")+ #classe 3
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=5,
            ymax=6,
            alpha=1,
            fill="#70c18c")+ #classe 2
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=6,
            ymax=Inf,
            alpha=1,
            fill="#8dcdeb")+ #classe 1
   stat_boxplot(geom = 'errorbar',
                width=0.3,
                position = position_dodge(width = 0.65))+
   geom_boxplot(fill='#F8F8FF',
                color="black",
                outlier.shape = 1, #se deixar NA fica só o jitter, se não, deixa 1
                width= 0.7)+
   labs(title = "Oxigênio Dissolvido no período 2000-2010",
        x="Estação",
        y="")+
   # geom_jitter(width = .05,
   #             alpha=.2,
   #             size=1.5,
   #             color="black")+
   scale_y_continuous(expand = expansion(mult = c(0,0)),
                      n.breaks = 11,
                      limits = c(-1,21))+
    scale_x_discrete(limits = c("87398500", "87398980", "87398900", "87398950", "87405500", "87406900", "87409900"))+
   geom_smooth(method = "lm",
               se=FALSE, #se deixar TRUE gera o intervalo de confiança de 95%
               aes(group=1),
               alpha=.5,
               na.rm = TRUE,
               size = 1)+
   # geom_line(aes(color="red"),
   #           alpha=.0)+
   # scale_color_manual("Legenda",
   #                    guide="legend",
   #                    values = c("Classe 1"="#8dcdeb",
   #                               "Classe 2"="#70c18c",
   #                               "Classe 3"="#fcf7ab",
   #                               "Classe 4"="#eb5661",
   #                               "Pior Classe"="#ac5079"))+
   # guides(color=guide_legend(override.aes = list(linetype=c(1,1,1,1,1),
   #                                               lwd=c(2,2,2,2,2),
   #                                               shape=c(NA,NA,NA,NA,NA),
   #                                               alpha=1)))+
   theme(legend.position = "bottom")+
   theme_classic())

```

```{r Gráfico OD periodo 3, echo = FALSE, warning=FALSE, message = FALSE}
(od_p3 <-ggplot(plan_wide_19902020 %>% 
                       filter(ANO_COLETA>"2010" &
                              ANO_COLETA<="2020"),
                     aes(CODIGO,
                         `Oxigênio dissolvido`))+
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=-Inf,
            ymax=2,
            alpha=1,
            fill="#ac5079")+ #>pior classe
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=2,
            ymax=4,
            alpha=1,
            fill="#eb5661")+ #classe 4
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=4,
            ymax=5,
            alpha=1,
            fill="#fcf7ab")+ #classe 3
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=5,
            ymax=6,
            alpha=1,
            fill="#70c18c")+ #classe 2
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=6,
            ymax=Inf,
            alpha=1,
            fill="#8dcdeb")+ #classe 1
   stat_boxplot(geom = 'errorbar',
                width=0.3,
                position = position_dodge(width = 0.65))+
   geom_boxplot(fill='#F8F8FF',
                color="black",
                outlier.shape = 1, #se deixar NA fica só o jitter, se não, deixa 1
                width= 0.7)+
   labs(title = "Oxigênio Dissolvido no período 2010-2020",
        x="Estação",
        y="")+
   # geom_jitter(width = .05,
   #             alpha=.2,
   #             size=1.5,
   #             color="black")+
   scale_y_continuous(expand = expansion(mult = c(0,0)),
                      n.breaks = 11,
                      limits = c(-1,21))+
    scale_x_discrete(limits = c("87398500", "87398980", "87398900", "87398950", "87405500", "87406900", "87409900"))+
   geom_smooth(method = "lm",
               se=FALSE, #se deixar TRUE gera o intervalo de confiança de 95%
               aes(group=1),
               alpha=.5,
               na.rm = TRUE,
               size = 1)+
   # geom_line(aes(color="red"),
   #           alpha=.0)+
   # scale_color_manual("Legenda",
   #                    guide="legend",
   #                    values = c("Classe 1"="#8dcdeb",
   #                               "Classe 2"="#70c18c",
   #                               "Classe 3"="#fcf7ab",
   #                               "Classe 4"="#eb5661",
   #                               "Pior Classe"="#ac5079"))+
   # guides(color=guide_legend(override.aes = list(linetype=c(1,1,1,1,1),
   #                                               lwd=c(2,2,2,2,2),
   #                                               shape=c(NA,NA,NA,NA,NA),
   #                                               alpha=1)))+
   theme(legend.position = "bottom")+
   theme_classic())
```

```{r Gráfico OD 3 periodos juntos, echo = TRUE, warning=FALSE, message = FALSE, fig.cap="Oxigênio Dissolvido no período 1990-2020"}
grid.arrange(od_p1, od_p2, od_p3, ncol = 3)
# summary(plan_wide_19902020 %>%
#           select(CODIGO,
#                  `Oxigênio dissolvido`),
#         filter(ANO_COLETA>"2010" &
#                  ANO_COLETA<="2020"))
```

```{r Salvando OD}
ggsave("od_p1.png",
       plot = od_p1,
       path = "./graficos",
       dpi = 300,
       type = "cairo")

ggsave("od_p2.png",
       plot = od_p2,
       path = "./graficos",
       dpi = 300,
       type = "cairo")

ggsave("od_p3.png",
       plot = od_p3,
       path = "./graficos",
       dpi = 300,
       type = "cairo")

ggsave("od_3periodos_2.png",
       units = c("px"),
       width = 4500,
       height = 2993,
       plot = grid.arrange(od_p1, od_p2, od_p3, ncol = 3),
       path = "./graficos",
       dpi = 300,
       type = "cairo")
```

```{r Gráfico OD_chernobyl, echo = FALSE, warning=FALSE, message = FALSE}
# (testandood <-ggplot(plan_wide_19902020,
#                      aes(CODIGO,
#                          `Oxigênio dissolvido`))+
#    annotate("rect",
#             xmin=-Inf,
#             xmax=Inf,
#             ymin=-Inf,
#             ymax=2,
#             alpha=1,
#             fill="#ac5079")+ #>pior classe
#    annotate("rect",
#             xmin=-Inf,
#             xmax=Inf,
#             ymin=2,
#             ymax=4,
#             alpha=1,
#             fill="#eb5661")+ #classe 4
#    annotate("rect",
#             xmin=-Inf,
#             xmax=Inf,
#             ymin=4,
#             ymax=5,
#             alpha=1,
#             fill="#fcf7ab")+ #classe 3
#    annotate("rect",
#             xmin=-Inf,
#             xmax=Inf,
#             ymin=5,
#             ymax=6,
#             alpha=1,
#             fill="#70c18c")+ #classe 2
#    annotate("rect",
#             xmin=-Inf,
#             xmax=Inf,
#             ymin=6,
#             ymax=Inf,
#             alpha=1,
#             fill="#8dcdeb")+ #classe 1
#    stat_boxplot(geom = 'errorbar',
#                 width=0.3,
#                 position = position_dodge(width = 0.65))+
#    geom_boxplot(fill='#F8F8FF',
#                 color="black",
#                 outlier.shape = 1, #se deixar NA fica só o jitter, se não, deixa 1
#                 width= 0.7)+
#    labs(title = "Oxigênio Dissolvido",
#         x="Estação",
#         y="mg/L")+
#    # geom_jitter(width = .05,
#    #             alpha=.2,
#    #             size=1.5,
#    #             color="black")+
#    scale_y_continuous(expand = expansion(mult = c(0,0)),
#                       breaks = ,
#                       limits = c(-1,21))+
#    geom_smooth(method = "lm",
#                se=FALSE, #se deixar TRUE gera o intervalo de confiança de 95%
#                aes(group=1),
#                alpha=.5,
#                na.rm = TRUE,
#                size = 1)+
#    stat_cor(na.rm = TRUE,
#             label.y = 15,
#             hjust = 0,
#             show.legend = TRUE)+
#    stat_regline_equation(na.rm = TRUE,
#                          label.y = 50,
#                          # label.x = "87398500",
#                          aes(label = ..eq.label..))+
#    stat_regline_equation(na.rm=TRUE,
#                          label.y = 100,
#                          # label.x = "87398500",
#                          aes(label = ..adj.rr.label..),
#                          hjust = 0,
#                          show.legend = TRUE)+
#    geom_line(aes(color="red"),
#              alpha=.0)+
#    scale_color_manual("Legenda",
#                       guide="legend",
#                       values = c("Classe 1"="#8dcdeb",
#                                  "Classe 2"="#70c18c",
#                                  "Classe 3"="#fcf7ab",
#                                  "Classe 4"="#eb5661",
#                                  "Pior Classe"="#ac5079"))+
#    guides(color=guide_legend(override.aes = list(linetype=c(1,1,1,1,1),
#                                                  lwd=c(2,2,2,2,2),
#                                                  shape=c(NA,NA,NA,NA,NA),
#                                                  alpha=1)))+
#    theme(legend.position = "bottom")+
#    theme_classic())
```

```{r mais um teste, echo = FALSE, warning=FALSE, message = FALSE}
# install.packages("modelsummary")
# library(modelsummary)
# url111 <- 'https://vincentarelbundock.github.io/Rdatasets/csv/HistData/Guerry.csv'
# dat <- read.csv(url111)
# dat$Small <- dat$Pop1831 > median(dat$Pop1831)
# datasummary_skim(dat)
# datasummary_balance(~Small, dat)
# datasummary_correlation(dat)
# 
# 
# datasummary_correlation(parametros_IQA)
# datasummary(Literacy + Commerce~Small *(mean+sd), dat)
# mod <- lm(Donations~Crime_prop, data = dat)
# 
# mod2 <-lm(data = plan_wide_19902020,
#           plan_wide_19902020$CODIGO ~ list(parametros_IQA))
# 
# for (i in 1:lenght(parametros_IQA)){
#   lm(plan_wide_19902020$CODIGO ~ parametros_IQA[i])
# }
# 
# training_data <- as.data.frame(matrix(sample(1:64), nrow = 8))
# colnames(training_data) <- c("independent_variable", paste0("x", 1:7))
# Vars <- as.list(c("x1+x2+x3",
#                 "x1+x2+x4",
#                 "x1+x2+x5",
#                 "x1+x2+x6",
#                 "x1+x2+x7"))
# allModelsList <- lapply(paste("independent_variable ~", Vars), as.formula)
# allModelsResults <- lapply(allModelsList, function(x) lm(x, data = training_data))
# allModelsSummaries = lapply(allModelsResults, summary) 
# allModelsSummaries[[1]]$r.squared
# 
# 
# 
# 
# 
# modelsummary(mod)
# 
# plan_wide_19902020 %>%
#   select(CODIGO,
#          DBO,
#          `Oxigênio dissolvido`,
#          `Fósforo total`,
#          `Escherichia coli`,
#          `Nitrogênio amoniacal`,
#          pH,
#          Turbidez,
#          `Sólidos totais`,
#          `Temperatura água`) %>%
#   datasummary_skim()
# 
# plan_wide_19902020 %>%
#   select(CODIGO,
#          `Oxigênio dissolvido`) %>%
#   datasummary_skim()

# install.packages("estimatr")
# library(estimatr)

# glimpse(plan_wide_19902020)


# datasummary(
#   unique(CODIGO) + `Oxigênio dissolvido` ~
#     P25 + Mean,data = plan_wide_19902020 %>%
#     select(CODIGO,
#            `Oxigênio dissolvido`)
# )
# install.packages("gtsummary", type = "binary")
# library(gtsummary)



# parametros_IQA <- plan_wide_19902020 %>%
#   select(CODIGO,
#          `Escherichia coli`,
#          pH,
#          DBO,
#          `Nitrogênio amoniacal`,
#          `Nitrogênio total`,
#          `Fósforo total`,
#          `Temperatura água`,
#          Turbidez,
#          `Sólidos totais`,
#          `Oxigênio dissolvido`,
#          Condutividade)
# 
# 
# mod <- lm(y ~ x, cars)
# modelsummary(cars)

# fit<-lm(plan_wide_19902020$CODIGO~plan_wide_19902020$DBO)
# summary(fit)
# ggplot(plan_wide_19902020,
#        aes(x=CODIGO,
#            y=DBO,
#            add = "reg.line"))+
#   geom_smooth(method = "lm",
#                se = TRUE, #se deixar TRUE gera o intervalo de confiança de 95%
#                aes(group = 1),
#                alpha= .8,
#                na.rm = TRUE,
#                size = 1)+
#   geom_point(na.rm = TRUE)+
#   stat_regline_equation(aes(label = ..eq.label..),
#                         na.rm = TRUE,
#                         label.x.npc = "center",
#                         label.y.npc = "center",
#                         geom = "text")
#   
# 
# summary(fit)
```


```{r Gráfico IQA OD periodo1, echo = FALSE, message=FALSE, warning=FALSE}
(iqaod_1990_2000 <-ggplot(plan_wide_19902020 %>% 
                          filter(ANO_COLETA > "1990" &
                                 ANO_COLETA <= "2000"),
                        aes(CODIGO,
                            IQA_OD, na.rm = TRUE))+
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=-Inf,
            ymax=19,
            alpha=1,
            fill="#ac5079")+ #>pior classe
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=19,
            ymax=36,
            alpha=1,
            fill="#eb5661")+ #classe 4
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=36,
            ymax=51,
            alpha=1,
            fill="#fcf7ab")+ #classe 3
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=51,
            ymax=79,
            alpha=1,
            fill="#70c18c")+ #classe 2
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=79,
            ymax=Inf,
            alpha=1,
            fill="#8dcdeb")+ #classe 1
   stat_boxplot(geom = 'errorbar',
                width=0.3,
                position = position_dodge(width = 0.65),
                na.rm = TRUE)+
   geom_boxplot(fill='#F8F8FF',
                color="black",
                outlier.shape = 1, #se deixar NA fica só o jitter, se não, deixa 1
                width= 0.7,
                na.rm = TRUE)+
   labs(title = "Variação do IQA para o parâmetro Oxigênio Dissolvido 1990-2000",
        x="Estação",
        y="")+
   # geom_jitter(width = .05,
   #             alpha=.2,
   #             size=1.5,
   #             color="black")+
   scale_y_continuous(expand = expansion(mult = c(0,0)),
                      n.breaks = 6,
                      limits = c(-1,101))+
    scale_x_discrete(limits = c("87398500", "87398980", "87398900", "87398950", "87405500", "87406900", "87409900"))+
   geom_smooth(method = "lm",
               se=FALSE, #se deixar TRUE gera o intervalo de confiança de 95%
               aes(group=1),
               alpha=.5,
               na.rm = TRUE,
               size = 1)+
   # geom_line(aes(color="red"),
   #           alpha=.0)+
   # scale_color_manual("Legenda",
   #                    guide="legend",
   #                    values = c("Ótima"="#8dcdeb",
   #                               "Boa"="#70c18c",
   #                               "Regular"="#fcf7ab",
   #                               "Ruim"="#eb5661",
   #                               "Péssima"="#ac5079"))+
   # guides(color=guide_legend(override.aes = list(linetype=c(1,1,1,1,1),
   #                                               lwd=c(2,2,2,2,2),
   #                                               shape=c(NA,NA,NA,NA,NA),
   #                                               alpha=1)))+
   theme(legend.position = "bottom")+
   theme_classic())
```

```{r Gráfico IQA OD periodo2, echo = FALSE, warning= FALSE, message = FALSE}
(iqaod_2000_2010 <-ggplot(plan_wide_19902020 %>% 
                          filter(ANO_COLETA > "2000" &
                                 ANO_COLETA <= "2010"),
                        aes(CODIGO,
                            IQA_OD, na.rm = TRUE))+
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=-Inf,
            ymax=19,
            alpha=1,
            fill="#ac5079")+ #>pior classe
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=19,
            ymax=36,
            alpha=1,
            fill="#eb5661")+ #classe 4
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=36,
            ymax=51,
            alpha=1,
            fill="#fcf7ab")+ #classe 3
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=51,
            ymax=79,
            alpha=1,
            fill="#70c18c")+ #classe 2
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=79,
            ymax=Inf,
            alpha=1,
            fill="#8dcdeb")+ #classe 1
   stat_boxplot(geom = 'errorbar',
                width=0.3,
                position = position_dodge(width = 0.65),
                na.rm = TRUE)+
   geom_boxplot(fill='#F8F8FF',
                color="black",
                outlier.shape = 1, #se deixar NA fica só o jitter, se não, deixa 1
                width= 0.7,
                na.rm = TRUE)+
   labs(title = "Variação do IQA para o parâmetro Oxigênio Dissolvido 2010-2020",
        x="Estação",
        y="")+
   # geom_jitter(width = .05,
   #             alpha=.2,
   #             size=1.5,
   #             color="black")+
   scale_y_continuous(expand = expansion(mult = c(0,0)),
                      n.breaks = 6,
                      limits = c(-1,101))+
    scale_x_discrete(limits = c("87398500", "87398980", "87398900", "87398950", "87405500", "87406900", "87409900"))+
   geom_smooth(method = "lm",
               se=FALSE, #se deixar TRUE gera o intervalo de confiança de 95%
               aes(group=1),
               alpha=.5,
               na.rm = TRUE,
               size = 1)+
   # geom_line(aes(color="red"),
   #           alpha=.0)+
   # scale_color_manual("Legenda",
   #                    guide="legend",
   #                    values = c("Ótima"="#8dcdeb",
   #                               "Boa"="#70c18c",
   #                               "Regular"="#fcf7ab",
   #                               "Ruim"="#eb5661",
   #                               "Péssima"="#ac5079"))+
   # guides(color=guide_legend(override.aes = list(linetype=c(1,1,1,1,1),
   #                                               lwd=c(2,2,2,2,2),
   #                                               shape=c(NA,NA,NA,NA,NA),
   #                                               alpha=1)))+
   theme(legend.position = "bottom")+
   theme_classic())

```

```{r Gráfico IQA OD periodo3, echo = FALSE, warning=FALSE, message = FALSE}
(iqaod_2010_2020 <-ggplot(plan_wide_19902020 %>% 
                          filter(ANO_COLETA > "2010" &
                                 ANO_COLETA <= "2020"),
                        aes(CODIGO,
                            IQA_OD, na.rm = TRUE))+
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=-Inf,
            ymax=19,
            alpha=1,
            fill="#ac5079")+ #>pior classe
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=19,
            ymax=36,
            alpha=1,
            fill="#eb5661")+ #classe 4
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=36,
            ymax=51,
            alpha=1,
            fill="#fcf7ab")+ #classe 3
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=51,
            ymax=79,
            alpha=1,
            fill="#70c18c")+ #classe 2
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=79,
            ymax=Inf,
            alpha=1,
            fill="#8dcdeb")+ #classe 1
   stat_boxplot(geom = 'errorbar',
                width=0.3,
                position = position_dodge(width = 0.65),
                na.rm = TRUE)+
   geom_boxplot(fill='#F8F8FF',
                color="black",
                outlier.shape = 1, #se deixar NA fica só o jitter, se não, deixa 1
                width= 0.7,
                na.rm = TRUE)+
   labs(title = "Variação do IQA para o parâmetro Oxigênio Dissolvido 2010-2020",
        x="Estação",
        y="")+
   # geom_jitter(width = .05,
   #             alpha=.2,
   #             size=1.5,
   #             color="black")+
   scale_y_continuous(expand = expansion(mult = c(0,0)), #expandir o limite max de visualização do dado em x%
                      n.breaks = 6,
                      limits = c(-1,101))+
    scale_x_discrete(limits = c("87398500", "87398980", "87398900", "87398950", "87405500", "87406900", "87409900"))+
   # coord_cartesian(ylim = c(2,98))+
   geom_smooth(method = "lm",
               se=FALSE, #se deixar TRUE gera o intervalo de confiança de 95%
               aes(group=1),
               alpha=.5,
               na.rm = TRUE,
               size = 1)+
   # geom_line(aes(color="red"),
   #           alpha=.0)+
   # scale_color_manual("Legenda",
   #                    guide="legend",
   #                    values = c("Ótima"="#8dcdeb",
   #                               "Boa"="#70c18c",
   #                               "Regular"="#fcf7ab",
   #                               "Ruim"="#eb5661",
   #                               "Péssima"="#ac5079"))+
   # guides(color=guide_legend(override.aes = list(linetype=c(1,1,1,1,1),
   #                                               lwd=c(2,2,2,2,2),
   #                                               shape=c(NA,NA,NA,NA,NA),
   #                                               alpha=1)))+
   theme(legend.position = "bottom")+
   theme_classic())
```

```{r Gráfico OD_IQA 6 periodos juntos, warning=FALSE, message=FALSE}
iqaod1 <- iqaod_1990_2000
iqaod2 <- iqaod_2000_2010
iqaod3 <- iqaod_2010_2020
grid.arrange(iqaod1, iqaod2, iqaod3, ncol = 3)
# grid.arrange(od_p1, od_p2, od_p3,
#              iqaod1, iqaod2, iqaod3,
#              ncol = 3, nrow=2)
```

Resultado que quero chegar pro sumário

| variable  | Estação 1 | Estação 2 |  Estação 3 |  Estação 4 |
| :-------: | :-------: | :-------: |  :-------: |  :-------: |
| max       | 15        |   17      |     16     |    14      |
| med       | 14        |   16      |     15     |    13      |
| min       | 13        |   15      |     14     |    12      |
| n         | 15        |   12      |     3      |    4       |

```{r Sumário OD, echo = FALSE}
plan_wide_19902020 %>%
  select(CODIGO, `Oxigênio dissolvido`, ANO_COLETA) %>% 
  filter(ANO_COLETA>"1990" &
         ANO_COLETA<="2000") %>% 
  group_by(CODIGO) %>% 
  summarize(
    min = 
      min(`Oxigênio dissolvido`, na.rm = TRUE),
    q1 = 
      quantile(`Oxigênio dissolvido`, 0.25, na.rm = TRUE),
    median = 
      median(`Oxigênio dissolvido`, na.rm = TRUE),
    mean = 
      mean(`Oxigênio dissolvido`, na.rm= TRUE),
    q3 = 
      quantile(`Oxigênio dissolvido`, 0.75, na.rm = TRUE),
    max = 
      max(`Oxigênio dissolvido`, na.rm = TRUE))

plan_wide_19902020 %>%
  select(CODIGO, `Oxigênio dissolvido`, ANO_COLETA) %>% 
  filter(ANO_COLETA>"2000" &
         ANO_COLETA<="2010") %>% 
  group_by(CODIGO) %>% 
  summarize(
    min = 
      min(`Oxigênio dissolvido`, na.rm = TRUE),
    q1 = 
      quantile(`Oxigênio dissolvido`, 0.25, na.rm = TRUE),
    median = 
      median(`Oxigênio dissolvido`, na.rm = TRUE),
    mean = 
      mean(`Oxigênio dissolvido`, na.rm= TRUE),
    q3 = 
      quantile(`Oxigênio dissolvido`, 0.75, na.rm = TRUE),
    max = 
      max(`Oxigênio dissolvido`, na.rm = TRUE))

plan_wide_19902020 %>%
  select(CODIGO, `Oxigênio dissolvido`, ANO_COLETA) %>% 
  filter(ANO_COLETA>"2010" &
         ANO_COLETA<="2020") %>% 
  group_by(CODIGO) %>% 
  summarize(
    min = 
      min(`Oxigênio dissolvido`, na.rm = TRUE),
    q1 = 
      quantile(`Oxigênio dissolvido`, 0.25, na.rm = TRUE),
    median = 
      median(`Oxigênio dissolvido`, na.rm = TRUE),
    mean = 
      mean(`Oxigênio dissolvido`, na.rm= TRUE),
    q3 = 
      quantile(`Oxigênio dissolvido`, 0.75, na.rm = TRUE),
    max = 
      max(`Oxigênio dissolvido`, na.rm = TRUE))

# sumario_OD3 <- plan_wide_19902020 %>%
#   select(DATA_COLETA, CODIGO, `Oxigênio dissolvido`) %>% 
#   pivot_wider(id_cols = DATA_COLETA,
#               names_from = CODIGO,
#               values_from = plan_wide_19902020$`Oxigênio dissolvido`)
# 
# unique(plan_wide_19902020$CODIGO)

# 
#   pivot_wider(id_cols = CODIGO,
#               names_from = CODIGO,
#               values_from = `Oxigênio dissolvido`)
# 
# 
#   group_by(CODIGO) %>%
#   get_summary_stats(type = "common") %>%
#   pivot_wider(id_cols = variable,
#               names_from = CODIGO,
#               values_from = variable$`Oxigênio dissolvido`)
# 
# # install.packages("ggpubr")
# # library(ggpubr)
```

```{r setup, include=FALSE}
# knitr::opts_chunk$set(echo = TRUE)
```

### Demanda Bioquímica de Oxigênio

```{r Gráfico DBO período1, echo = FALSE, warning = FALSE, message = FALSE}
(dbo_p1<-ggplot(plan_wide_19902020 %>% 
                  filter(ANO_COLETA>"1990" &
                        ANO_COLETA<="2000"),
                aes(CODIGO,
                    DBO))+
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=10,
            ymax=Inf,
            alpha=1,
            fill="#ac5079")+ #>pior classe
   # annotate("rect",
   #          xmin=-Inf,
   #          xmax=Inf,
   #          ymin=2,
   #          ymax=4,
   #          alpha=1,
   #          fill="#eb5661")+ #classe 4
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=5,
            ymax=10,
            alpha=1,
            fill="#fcf7ab")+ #classe 3
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=3,
            ymax=5,
            alpha=1,
            fill="#70c18c")+ #classe 2
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=0,
            ymax=3,
            alpha=1,
            fill="#8dcdeb")+ #classe 1
   stat_boxplot(geom = 'errorbar',
                width=0.3,
                position = position_dodge(width = 0.65))+
   geom_boxplot(fill='#F8F8FF',
                color="black",
                outlier.shape = 1, #se deixar NA fica só o jitter, se não, deixa 1
                width= 0.7)+
   labs(title = "Demanda Bioquímica de Oxigênio no período 1990-2000",
        x="Estação",
        y="mg/L")+
   # geom_jitter(width = .05,
   #             alpha=.2,
   #             size=1.5,
   #             color="black")+
   scale_y_continuous(expand = expansion(mult = c(0.03,0.03)),
                      n.breaks = 8,
                      limits = c(1,100),
                      trans = "log10")+
    scale_x_discrete(limits = c("87398500", "87398980", "87398900", "87398950", "87405500", "87406900", "87409900"))+
   geom_smooth(method = "lm",
               se=FALSE, #se deixar TRUE gera o intervalo de confiança de 95%
               aes(group=1),
               alpha=.5,
               na.rm = TRUE,
               size = 1)+
   # geom_line(aes(color="red"),
   #           alpha=.0)+
   # scale_color_manual("Legenda",
   #                    guide="legend",
   #                    values = c("Pior classe"="#ac5079",
   #                               "Classe 3"="#fcf7ab",
   #                               "Classe 2"="#70c18c",
   #                               "Classe 1"="#8dcdeb"))+
   # guides(color=guide_legend(override.aes = list(linetype=c(1,1,1,1),
   #                                               lwd=c(2,2,2,2),
   #                                               shape=c(NA,NA,NA,NA),
   #                                               alpha=1)))+
   theme(legend.position = "bottom")+
   theme_classic())

```

```{r Gráfico DBO período2, echo = FALSE, warning = FALSE, message = FALSE}
(dbo_p2<-ggplot(plan_wide_19902020 %>% 
                  filter(ANO_COLETA>"2000" &
                        ANO_COLETA<="2010"),
                aes(CODIGO,
                    DBO))+
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=10,
            ymax=Inf,
            alpha=1,
            fill="#ac5079")+ #>pior classe
   # annotate("rect",
   #          xmin=-Inf,
   #          xmax=Inf,
   #          ymin=2,
   #          ymax=4,
   #          alpha=1,
   #          fill="#eb5661")+ #classe 4
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=5,
            ymax=10,
            alpha=1,
            fill="#fcf7ab")+ #classe 3
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=3,
            ymax=5,
            alpha=1,
            fill="#70c18c")+ #classe 2
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=0,
            ymax=3,
            alpha=1,
            fill="#8dcdeb")+ #classe 1
   stat_boxplot(geom = 'errorbar',
                width=0.3,
                position = position_dodge(width = 0.65))+
   geom_boxplot(fill='#F8F8FF',
                color="black",
                outlier.shape = 1, #se deixar NA fica só o jitter, se não, deixa 1
                width= 0.7)+
   labs(title = "Demanda Bioquímica de Oxigênio no período 2000-2010",
        x="Estação",
        y="mg/L")+
   # geom_jitter(width = .05,
   #             alpha=.2,
   #             size=1.5,
   #             color="black")+
   scale_y_continuous(expand = expansion(mult = c(0.03,0.03)),
                      n.breaks = 8,
                      limits = c(1,100),
                      trans = "log10")+
    scale_x_discrete(limits = c("87398500", "87398980", "87398900", "87398950", "87405500", "87406900", "87409900"))+
   geom_smooth(method = "lm",
               se=FALSE, #se deixar TRUE gera o intervalo de confiança de 95%
               aes(group=1),
               alpha=.5,
               na.rm = TRUE,
               size = 1)+
   # geom_line(aes(color="red"),
   #           alpha=.0)+
   # scale_color_manual("Legenda",
   #                    guide="legend",
   #                    values = c("Pior classe"="#ac5079",
   #                               "Classe 3"="#fcf7ab",
   #                               "Classe 2"="#70c18c",
   #                               "Classe 1"="#8dcdeb"))+
   # guides(color=guide_legend(override.aes = list(linetype=c(1,1,1,1),
   #                                               lwd=c(2,2,2,2),
   #                                               shape=c(NA,NA,NA,NA),
   #                                               alpha=1)))+
   theme(legend.position = "bottom")+
   theme_classic())
```

```{r Gráfico DBO período3, echo = FALSE, warning = FALSE, message = FALSE}
(dbo_p3<-ggplot(plan_wide_19902020 %>% 
                  filter(ANO_COLETA>"2010" &
                        ANO_COLETA<="2020"),
                aes(CODIGO,
                    DBO, na.rm=TRUE))+
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=10,
            ymax=Inf,
            alpha=1,
            fill="#ac5079")+ #>pior classe
   # annotate("rect",
   #          xmin=-Inf,
   #          xmax=Inf,
   #          ymin=2,
   #          ymax=4,
   #          alpha=1,
   #          fill="#eb5661")+ #classe 4
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=5,
            ymax=10,
            alpha=1,
            fill="#fcf7ab")+ #classe 3
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=3,
            ymax=5,
            alpha=1,
            fill="#70c18c")+ #classe 2
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=0,
            ymax=3,
            alpha=1,
            fill="#8dcdeb")+ #classe 1
   stat_boxplot(geom = 'errorbar',
                width=0.3,
                position = position_dodge(width = 0.65))+
   geom_boxplot(fill='#F8F8FF',
                color="black",
                outlier.shape = 1, #se deixar NA fica só o jitter, se não, deixa 1
                width= 0.7)+
   labs(title = "Demanda Bioquímica de Oxigênio no período 2010-2020",
        x="Estação",
        y="mg/L")+
   # geom_jitter(width = .05,
   #             alpha=.2,
   #             size=1.5,
   #             color="black")+
   scale_y_continuous(expand = expansion(mult = c(0.03,0.03)),
                      n.breaks = 8,
                      limits = c(1,100),
                      trans = "log10")+
    scale_x_discrete(limits = c("87398500", "87398980", "87398900", "87398950", "87405500", "87406900", "87409900"))+
   geom_smooth(method = "lm",
               se=FALSE, #se deixar TRUE gera o intervalo de confiança de 95%
               aes(group=1),
               alpha=.5,
               na.rm = TRUE,
               size = 1)+
   # geom_line(aes(color="red"),
   #           alpha=.0)+
   # scale_color_manual("Legenda",
   #                    guide="legend",
   #                    values = c("Pior classe"="#ac5079",
   #                               "Classe 3"="#fcf7ab",
   #                               "Classe 2"="#70c18c",
   #                               "Classe 1"="#8dcdeb"))+
   # guides(color=guide_legend(override.aes = list(linetype=c(1,1,1,1),
   #                                               lwd=c(2,2,2,2),
   #                                               shape=c(NA,NA,NA,NA),
   #                                               alpha=1)))+
   theme(legend.position = "bottom")+
   theme_classic())
```

```{r Gráfico IQA DBO periodo1, echo = FALSE, warning = FALSE, message = FALSE}
(iqa_dbo1<-ggplot(plan_wide_19902020 %>% 
                  filter(ANO_COLETA>"1990" &
                        ANO_COLETA<="2000"),
                  aes(CODIGO,
                      IQA_DBO))+
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=-Inf,
            ymax=19,
            alpha=1,
            fill="#ac5079")+ #>pior classe
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=19,
            ymax=36,
            alpha=1,
            fill="#eb5661")+ #classe 4
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=36,
            ymax=51,
            alpha=1,
            fill="#fcf7ab")+ #classe 3
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=51,
            ymax=79,
            alpha=1,
            fill="#70c18c")+ #classe 2
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=79,
            ymax=Inf,
            alpha=1,
            fill="#8dcdeb")+ #classe 1))
   stat_boxplot(geom = 'errorbar',
                width=0.3,
                position = position_dodge(width = 0.65),
                na.rm = TRUE)+
   geom_boxplot(fill='#F8F8FF',
                color="black",
                outlier.shape = 1, #se deixar NA fica só o jitter, se não, deixa 1
                width= 0.7)+
   labs(title = "Variação do IQA para o parâmetro DBO 1990-2020",
        x="Estação",
        y="mg/L")+
   # geom_jitter(width = .05,
   #             alpha=.2,
   #             size=1.5,
   #             color="black")+
   scale_y_continuous(expand = expansion(mult = c(0,0)),
                      n.breaks = 6,
                      limits = c(-1,101))+
    scale_x_discrete(limits = c("87398500", "87398980", "87398900", "87398950", "87405500", "87406900", "87409900"))+
   geom_smooth(method = "lm",
               se=FALSE, #se deixar TRUE gera o intervalo de confiança de 95%
               aes(group=1),
               alpha=.5,
               na.rm = TRUE,
               size = 1)+
   # geom_line(aes(color="red"),
   #           alpha=.0)+
   # scale_color_manual("Legenda",
   #                    guide="legend",
   #                    values = c("Classe 1"="#8dcdeb",
   #                               "Classe 2"="#70c18c",
   #                               "Classe 3"="#fcf7ab",
   #                               "Classe 4"="#eb5661",
   #                               "Pior Classe"="#ac5079"))+
   # guides(color=guide_legend(override.aes = list(linetype=c(1,1,1,1,1),
   #                                               lwd=c(2,2,2,2,2),
   #                                               shape=c(NA,NA,NA,NA,NA),
   #                                               alpha=1)))+
   theme(legend.position = "bottom")+
   theme_classic())
```

```{r Gráfico IQA DBO periodo2, echo = FALSE, warning = FALSE, message = FALSE}
(iqa_dbo2<-ggplot(plan_wide_19902020%>% 
                  filter(ANO_COLETA>"2000" &
                        ANO_COLETA<="2010"),
                  aes(CODIGO,
                      IQA_DBO))+
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=-Inf,
            ymax=19,
            alpha=1,
            fill="#ac5079")+ #>pior classe
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=19,
            ymax=36,
            alpha=1,
            fill="#eb5661")+ #classe 4
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=36,
            ymax=51,
            alpha=1,
            fill="#fcf7ab")+ #classe 3
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=51,
            ymax=79,
            alpha=1,
            fill="#70c18c")+ #classe 2
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=79,
            ymax=Inf,
            alpha=1,
            fill="#8dcdeb")+ #classe 1))
   stat_boxplot(geom = 'errorbar',
                width=0.3,
                position = position_dodge(width = 0.65),
                na.rm = TRUE)+
   geom_boxplot(fill='#F8F8FF',
                color="black",
                outlier.shape = 1, #se deixar NA fica só o jitter, se não, deixa 1
                width= 0.7)+
   labs(title = "Variação do IQA para o parâmetro DBO 2000-2010",
        x="Estação",
        y="mg/L")+
   # geom_jitter(width = .05,
   #             alpha=.2,
   #             size=1.5,
   #             color="black")+
   scale_y_continuous(expand = expansion(mult = c(0,0)),
                      n.breaks = 6,
                      limits = c(-1,101))+
    scale_x_discrete(limits = c("87398500", "87398980", "87398900", "87398950", "87405500", "87406900", "87409900"))+
   geom_smooth(method = "lm",
               se=FALSE, #se deixar TRUE gera o intervalo de confiança de 95%
               aes(group=1),
               alpha=.5,
               na.rm = TRUE,
               size = 1)+
   # geom_line(aes(color="red"),
   #           alpha=.0)+
   # scale_color_manual("Legenda",
   #                    guide="legend",
   #                    values = c("Classe 1"="#8dcdeb",
   #                               "Classe 2"="#70c18c",
   #                               "Classe 3"="#fcf7ab",
   #                               "Classe 4"="#eb5661",
   #                               "Pior Classe"="#ac5079"))+
   # guides(color=guide_legend(override.aes = list(linetype=c(1,1,1,1,1),
   #                                               lwd=c(2,2,2,2,2),
   #                                               shape=c(NA,NA,NA,NA,NA),
   #                                               alpha=1)))+
   theme(legend.position = "bottom")+
   theme_classic())
```

```{r Gráfico IQA DBO periodo3, echo = FALSE, warning = FALSE, message = FALSE}
(iqa_dbo3<-ggplot(plan_wide_19902020%>% 
                  filter(ANO_COLETA>"2010" &
                        ANO_COLETA<="2020"),
                  aes(CODIGO,
                      IQA_DBO))+
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=-Inf,
            ymax=19,
            alpha=1,
            fill="#ac5079")+ #>pior classe
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=19,
            ymax=36,
            alpha=1,
            fill="#eb5661")+ #classe 4
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=36,
            ymax=51,
            alpha=1,
            fill="#fcf7ab")+ #classe 3
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=51,
            ymax=79,
            alpha=1,
            fill="#70c18c")+ #classe 2
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=79,
            ymax=Inf,
            alpha=1,
            fill="#8dcdeb")+ #classe 1))
   stat_boxplot(geom = 'errorbar',
                width=0.3,
                position = position_dodge(width = 0.65),
                na.rm = TRUE)+
   geom_boxplot(fill='#F8F8FF',
                color="black",
                outlier.shape = 1, #se deixar NA fica só o jitter, se não, deixa 1
                width= 0.7)+
   labs(title = "Variação do IQA para o parâmetro DBO 2010-2020",
        x="Estação",
        y="mg/L")+
   # geom_jitter(width = .05,
   #             alpha=.2,
   #             size=1.5,
   #             color="black")+
   scale_y_continuous(expand = expansion(mult = c(0,0)),
                      n.breaks = 6,
                      limits = c(-1,101))+
    scale_x_discrete(limits = c("87398500", "87398980", "87398900", "87398950", "87405500", "87406900", "87409900"))+
   geom_smooth(method = "lm",
               se=FALSE, #se deixar TRUE gera o intervalo de confiança de 95%
               aes(group=1),
               alpha=.5,
               na.rm = TRUE,
               size = 1)+
   # geom_line(aes(color="red"),
   #           alpha=.0)+
   # scale_color_manual("Legenda",
   #                    guide="legend",
   #                    values = c("Classe 1"="#8dcdeb",
   #                               "Classe 2"="#70c18c",
   #                               "Classe 3"="#fcf7ab",
   #                               "Classe 4"="#eb5661",
   #                               "Pior Classe"="#ac5079"))+
   # guides(color=guide_legend(override.aes = list(linetype=c(1,1,1,1,1),
   #                                               lwd=c(2,2,2,2,2),
   #                                               shape=c(NA,NA,NA,NA,NA),
   #                                               alpha=1)))+
   theme(legend.position = "bottom")+
   theme_classic())
```

```{r Gráfico DBO 3 periodos juntos, warning=FALSE, message=FALSE}
grid.arrange(dbo_p1, dbo_p2, dbo_p3, ncol = 3)
# grid.arrange(dbo_p1, dbo_p2, dbo_p3,
#              iqa_dbo1, iqa_dbo2, iqa_dbo3,
#              ncol = 3, nrow=2)
```

```{r Sumário DBO}
(sum_dbo_p1 <- plan_wide_19902020 %>%
   select(CODIGO, DBO, ANO_COLETA) %>% 
   filter(ANO_COLETA>"1990" &
            ANO_COLETA<="2000") %>% 
   group_by(CODIGO) %>% 
   summarize(
     min = 
       min(DBO, 
           na.rm = TRUE),
     q1 = 
       quantile(DBO, 0.25, 
                na.rm = TRUE),
     median = 
       median(DBO, 
              na.rm = TRUE),
     mean = 
       mean(DBO, 
            na.rm= TRUE),
     q3 = 
       quantile(DBO, 0.75, 
                na.rm = TRUE),
     max = 
       max(DBO, 
           na.rm = TRUE))
)

(sum_dbo_p2 <- plan_wide_19902020 %>%
   select(CODIGO, DBO, ANO_COLETA) %>% 
   filter(ANO_COLETA>"2000" &
            ANO_COLETA<="2010") %>% 
   group_by(CODIGO) %>% 
   summarize(
     min = 
       min(DBO, 
           na.rm = TRUE),
     q1 = 
       quantile(DBO, 0.25, 
                na.rm = TRUE),
     median = 
       median(DBO, 
              na.rm = TRUE),
     mean = 
       mean(DBO, 
            na.rm= TRUE),
     q3 = 
       quantile(DBO, 0.75, 
                na.rm = TRUE),
     max = 
       max(DBO, 
           na.rm = TRUE))
)

(sum_dbo_p3 <- plan_wide_19902020 %>%
   select(CODIGO, DBO, ANO_COLETA) %>% 
   filter(ANO_COLETA>"2010" &
            ANO_COLETA<="2020") %>% 
   group_by(CODIGO) %>% 
   summarize(
     min = 
       min(DBO, 
           na.rm = TRUE),
     q1 = 
       quantile(DBO, 0.25, 
                na.rm = TRUE),
     median = 
       median(DBO, 
              na.rm = TRUE),
     mean = 
       mean(DBO, 
            na.rm= TRUE),
     q3 = 
       quantile(DBO, 0.75, 
                na.rm = TRUE),
     max = 
       max(DBO, 
           na.rm = TRUE))
)
```

```{r Salvando DBO}
ggsave("dbo_p1.png",
       plot = dbo_p1,
       path = "./graficos",
       dpi = 300,
       type = "cairo")


ggsave("dbo_p2.png",
       plot = dbo_p2,
       path = "./graficos",
       dpi = 300,
       type = "cairo")

ggsave("dbo_p3.png",
       plot = dbo_p3,
       path = "./graficos",
       dpi = 300,
       type = "cairo")

ggsave("dbo_3periodos.png",
       units = c("px"),
       width = 4500,
       height = 2993,
       plot = grid.arrange(dbo_p1, dbo_p2, dbo_p3, ncol = 3),
       path = "./graficos",
       dpi = 300,
       type = "cairo")
```
### Fósforo total

```{r Gráfico Fósforo total periodo1, warning = FALSE, message = FALSE}
(ptot_p1<-ggplot(plan_wide_19902020%>% 
                   filter(ANO_COLETA>"1990" &
                            ANO_COLETA<="2000"),
                 aes(CODIGO,
                     `Fósforo total`))+
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=0.15,
            ymax=Inf,
            alpha=1,
            fill="#ac5079")+ #>pior classe
   #annotate("rect",
   #        xmin=-Inf,
   #       xmax=Inf,
   #      ymin=2,
   #     ymax=4,
   #    alpha=1,
   #   fill="#eb5661")+ #classe 4
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=0.1,
            ymax=0.15,
            alpha=1,
            fill="#fcf7ab")+ #classe 3
   #annotate("rect",
   #        xmin=-Inf,
   #       xmax=Inf,
   #      ymin=3,
   #     ymax=5,
   #    alpha=1,
   #   fill="#70c18c")+ #classe 2
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=0,
            ymax=0.1,
            alpha=1,
            fill="#8dcdeb")+ #classe 1
   stat_boxplot(geom = 'errorbar',
                width=0.3,
                position = position_dodge(width = 0.65))+
   geom_boxplot(fill='#F8F8FF',
                color="black",
                outlier.shape = 1, #se deixar NA fica só o jitter, se não, deixa 1
                width= 0.7)+
   labs(title = "Fósforo total no período 1990-2000",
        x="Estação",
        y="mg/L")+
   # geom_jitter(width = .05,
   #             alpha=.2,
   #             size=1.5,
   #             color="black")+
   scale_y_continuous(expand = expansion(mult = c(0.03,0.03)),
                      n.breaks = 8,
                      limits = c(min(plan_wide_19902020$`Fósforo total`, na.rm = TRUE),
                                 max(plan_wide_19902020$`Fósforo total`), na.rm = TRUE),
                      trans = "log10")+
    scale_x_discrete(limits = c("87398500", "87398980", "87398900", "87398950", "87405500", "87406900", "87409900"))+
   geom_smooth(method = "lm",
               se=FALSE, #se deixar TRUE gera o intervalo de confiança de 95%
               aes(group=1),
               alpha=.5,
               na.rm = TRUE,
               size = 1)+
   # geom_line(aes(color="red"),
   #           alpha=.0)+
   # scale_color_manual("Legenda",
   #                    guide="legend",
   #                    values = c("Pior Classe"="#ac5079",
   #                               "Classe 3"="#fcf7ab",
   #                               "Classe 1"="#8dcdeb"))+
   # guides(color=guide_legend(override.aes = list(linetype=c(1,1,1),
   #                                               lwd=c(2,2,2),
   #                                               shape=c(NA,NA,NA),
   #                                               alpha=1)))+
 theme(legend.position = "bottom")+
   theme_classic())

```

```{r Gráfico Fósforo total periodo2, warning = FALSE, message = FALSE}
(ptot_p2 <- ggplot(plan_wide_19902020%>% 
                     filter(ANO_COLETA>"2000" &
                              ANO_COLETA<="2010"),
                   aes(CODIGO,
                       `Fósforo total`))+
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=0.15,
            ymax=Inf,
            alpha=1,
            fill="#ac5079")+ #>pior classe
   #annotate("rect",
   #        xmin=-Inf,
   #       xmax=Inf,
   #      ymin=2,
   #     ymax=4,
   #    alpha=1,
   #   fill="#eb5661")+ #classe 4
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=0.1,
            ymax=0.15,
            alpha=1,
            fill="#fcf7ab")+ #classe 3
   #annotate("rect",
   #        xmin=-Inf,
   #       xmax=Inf,
   #      ymin=3,
   #     ymax=5,
   #    alpha=1,
   #   fill="#70c18c")+ #classe 2
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=0,
            ymax=0.1,
            alpha=1,
            fill="#8dcdeb")+ #classe 1
   stat_boxplot(geom = 'errorbar',
                width=0.3,
                position = position_dodge(width = 0.65))+
   geom_boxplot(fill='#F8F8FF',
                color="black",
                outlier.shape = 1, #se deixar NA fica só o jitter, se não, deixa 1
                width= 0.7)+
   labs(title = "Fósforo total no período 2000-2010",
        x="Estação",
        y="mg/L")+
   # geom_jitter(width = .05,
   #             alpha=.2,
   #             size=1.5,
   #             color="black")+
   scale_y_continuous(expand = expansion(mult = c(0.03,0.03)),
                      n.breaks = 8,
                      limits = c(min(plan_wide_19902020$`Fósforo total`, na.rm = TRUE),
                                 max(plan_wide_19902020$`Fósforo total`), na.rm = TRUE),
                      trans = "log10")+
    scale_x_discrete(limits = c("87398500", "87398980", "87398900", "87398950", "87405500", "87406900", "87409900"))+
   geom_smooth(method = "lm",
               se=FALSE, #se deixar TRUE gera o intervalo de confiança de 95%
               aes(group=1),
               alpha=.5,
               na.rm = TRUE,
               size = 1)+
   # geom_line(aes(color="red"),
   #           alpha=.0)+
   # scale_color_manual("Legenda",
   #                    guide="legend",
   #                    values = c("Pior Classe"="#ac5079",
   #                               "Classe 3"="#fcf7ab",
   #                               "Classe 1"="#8dcdeb"))+
   # guides(color=guide_legend(override.aes = list(linetype=c(1,1,1),
   #                                               lwd=c(2,2,2),
   #                                               shape=c(NA,NA,NA),
   #                                               alpha=1)))+
 theme(legend.position = "bottom")+
   theme_classic())

```

```{r Gráfico Fósforo total periodo3, warning = FALSE, message = FALSE}
(ptot_p3 <- ggplot(plan_wide_19902020%>% 
                   filter(ANO_COLETA>"2010" &
                            ANO_COLETA<="2020"),
                 aes(CODIGO,
                     `Fósforo total`))+
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=0.15,
            ymax=Inf,
            alpha=1,
            fill="#ac5079")+ #>pior classe
   #annotate("rect",
   #        xmin=-Inf,
   #       xmax=Inf,
   #      ymin=2,
   #     ymax=4,
   #    alpha=1,
   #   fill="#eb5661")+ #classe 4
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=0.1,
            ymax=0.15,
            alpha=1,
            fill="#fcf7ab")+ #classe 3
   #annotate("rect",
   #        xmin=-Inf,
   #       xmax=Inf,
   #      ymin=3,
   #     ymax=5,
   #    alpha=1,
   #   fill="#70c18c")+ #classe 2
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=0,
            ymax=0.1,
            alpha=1,
            fill="#8dcdeb")+ #classe 1
   stat_boxplot(geom = 'errorbar',
                width=0.3,
                position = position_dodge(width = 0.65))+
   geom_boxplot(fill='#F8F8FF',
                color="black",
                outlier.shape = 1, #se deixar NA fica só o jitter, se não, deixa 1
                width= 0.7)+
   labs(title = "Fósforo total no período 2010-2020",
        x="Estação",
        y="mg/L")+
   # geom_jitter(width = .05,
   #             alpha=.2,
   #             size=1.5,
   #             color="black")+
   scale_y_continuous(expand = expansion(mult = c(0.03,0.03)),
                      n.breaks = 8,
                      limits = c(min(plan_wide_19902020$`Fósforo total`, na.rm = TRUE),
                                 max(plan_wide_19902020$`Fósforo total`), na.rm = TRUE),
                      trans = "log10")+
    scale_x_discrete(limits = c("87398500", "87398980", "87398900", "87398950", "87405500", "87406900", "87409900"))+
   geom_smooth(method = "lm",
               se=FALSE, #se deixar TRUE gera o intervalo de confiança de 95%
               aes(group=1),
               alpha=.5,
               na.rm = TRUE,
               size = 1)+
   # geom_line(aes(color="red"),
   #           alpha=.0)+
   # scale_color_manual("Legenda",
   #                    guide="legend",
   #                    values = c("Pior Classe"="#ac5079",
   #                               "Classe 3"="#fcf7ab",
   #                               "Classe 1"="#8dcdeb"))+
   # guides(color=guide_legend(override.aes = list(linetype=c(1,1,1),
   #                                               lwd=c(2,2,2),
   #                                               shape=c(NA,NA,NA),
   #                                               alpha=1)))+
 theme(legend.position = "bottom")+
   theme_classic())

```

```{r Gráfico Ptot 3 periodos juntos, warning=FALSE, message=FALSE}
grid.arrange(ptot_p1, ptot_p2, ptot_p3, ncol = 3)
```

```{r Sumário Fósforo total}
(sum_ptot_p1 <- plan_wide_19902020 %>%
  select(CODIGO, `Fósforo total`, ANO_COLETA) %>% 
  filter(ANO_COLETA>"1990" &
        ANO_COLETA<="2000") %>% 
  group_by(CODIGO) %>% 
  summarize(
    min = 
      min(`Fósforo total`, na.rm = TRUE),
    q1 = 
      quantile(`Fósforo total`, 0.25, na.rm = TRUE),
    median = 
      median(`Fósforo total`, na.rm = TRUE),
    mean = 
      mean(`Fósforo total`, na.rm= TRUE),
    q3 = 
      quantile(`Fósforo total`, 0.75, na.rm = TRUE),
    max = 
      max(`Fósforo total`, na.rm = TRUE)))

(sum_ptot_p2 <- plan_wide_19902020 %>%
  select(CODIGO, `Fósforo total`, ANO_COLETA) %>% 
  filter(ANO_COLETA>"2000" &
         ANO_COLETA<="2010") %>% 
  group_by(CODIGO) %>% 
  summarize(
    min = 
      min(`Fósforo total`, na.rm = TRUE),
    q1 = 
      quantile(`Fósforo total`, 0.25, na.rm = TRUE),
    median = 
      median(`Fósforo total`, na.rm = TRUE),
    mean = 
      mean(`Fósforo total`, na.rm= TRUE),
    q3 = 
      quantile(`Fósforo total`, 0.75, na.rm = TRUE),
    max = 
      max(`Fósforo total`, na.rm = TRUE)))

(sum_ptot_p3 <- plan_wide_19902020 %>%
  select(CODIGO, `Fósforo total`, ANO_COLETA) %>% 
  filter(ANO_COLETA>"2010" &
         ANO_COLETA<="2020") %>% 
  group_by(CODIGO) %>% 
  summarize(
    min = 
      min(`Fósforo total`, na.rm = TRUE),
    q1 = 
      quantile(`Fósforo total`, 0.25, na.rm = TRUE),
    median = 
      median(`Fósforo total`, na.rm = TRUE),
    mean = 
      mean(`Fósforo total`, na.rm= TRUE),
    q3 = 
      quantile(`Fósforo total`, 0.75, na.rm = TRUE),
    max = 
      max(`Fósforo total`, na.rm = TRUE)))
      
```

```{r Salvando Ptot}
ggsave("ptot_p1.png",
       plot = ptot_p1,
       path = "./graficos",
       dpi = 300,
       type = "cairo")


ggsave("ptot_p2.png",
       plot = ptot_p2,
       path = "./graficos",
       dpi = 300,
       type = "cairo")

ggsave("ptot_p3.png",
       plot = ptot_p3,
       path = "./graficos",
       dpi = 300,
       type = "cairo")

ggsave("ptot_3periodos.png",
       units = c("px"),
       width = 4500,
       height = 2993,
       plot = grid.arrange(ptot_p1, ptot_p2, ptot_p3, ncol = 3),
       path = "./graficos",
       dpi = 300,
       type = "cairo")
```

### Escherichia coli

```{r Gráfico Ecoli periodo1, warning = FALSE, message = FALSE}
(ecoli_p1 <- ggplot(plan_wide_19902020 %>% 
                      filter(ANO_COLETA>"1990" &
                             ANO_COLETA<="2000"),
                    aes(CODIGO,
                        `Escherichia coli`))+
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=3200,
            ymax=Inf,
            alpha=1,
            fill="#ac5079")+ #>pior classe
   #annotate("rect",
   #        xmin=-Inf,
   #       xmax=Inf,
   #      ymin=2,
   #     ymax=4,
   #    alpha=1,
   #   fill="#eb5661")+ #classe 4
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=800,
            ymax=3200,
            alpha=1,
            fill="#fcf7ab")+ #classe 3
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=160,
            ymax=800,
            alpha=1,
            fill="#70c18c")+ #classe 2
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=0,
            ymax=160,
            alpha=1,
            fill="#8dcdeb")+ #classe 1
   stat_boxplot(geom = 'errorbar',
                width=0.3,
                position = position_dodge(width = 0.65))+
   geom_boxplot(fill='#F8F8FF',
                color="black",
                outlier.shape = 1, #se deixar NA fica só o jitter, se não, deixa 1
                width= 0.7)+
   labs(title = "Escherichia coli no período 1990-2000",
        x="Estação",
        y="NMP/100mL")+
   # geom_jitter(width = .05,
   #             alpha=.2,
   #             size=1.5,
   #             color="black")+
    scale_y_continuous(expand = expansion(mult = c(0.01, 0.01)),
                      n.breaks = 9,
                  limits = c(min(plan_wide_19902020$`Escherichia coli`, na.rm = TRUE),
                             max(plan_wide_19902020$`Escherichia coli`, na.rm = TRUE)),
                      trans = "log10",
                      labels = scales::number_format(accuracy = 1,
                                                     decimal.mark = ",",
                                                     big.mark = " "))+
    scale_x_discrete(limits = c("87398500", "87398980", "87398900", "87398950", "87405500", "87406900", "87409900"))+
   geom_smooth(method = "lm",
               se=FALSE, #se deixar TRUE gera o intervalo de confiança de 95%
               aes(group=1),
               alpha=.5,
               na.rm = TRUE,
               size = 1)+
   # geom_line(aes(color="red"),
   #           alpha=.0)+
   # scale_color_manual("Legenda",
   #                    guide="legend",
   #                    values = c("Pior Classe"="#ac5079",
   #                               "Classe 3"="#fcf7ab",
   #                               "Classe 2"="#70c18c",
   #                               "Classe 1"="#8dcdeb"))+
   # guides(color=guide_legend(override.aes = list(linetype=c(1,1,1,1),
   #                                               lwd=c(2,2,2,2),
   #                                               shape=c(NA,NA,NA,NA),
   #                                               alpha=1)))+
   theme_classic())
```

```{r Gráfico Ecoli periodo2, warning = FALSE, message = FALSE}
(ecoli_p2 <- ggplot(plan_wide_19902020 %>% 
                      filter(ANO_COLETA>"2000" &
                             ANO_COLETA<="2010"),
                    aes(CODIGO,
                        `Escherichia coli`))+
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=3200,
            ymax=Inf,
            alpha=1,
            fill="#ac5079")+ #>pior classe
   #annotate("rect",
   #        xmin=-Inf,
   #       xmax=Inf,
   #      ymin=2,
   #     ymax=4,
   #    alpha=1,
   #   fill="#eb5661")+ #classe 4
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=800,
            ymax=3200,
            alpha=1,
            fill="#fcf7ab")+ #classe 3
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=160,
            ymax=800,
            alpha=1,
            fill="#70c18c")+ #classe 2
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=0,
            ymax=160,
            alpha=1,
            fill="#8dcdeb")+ #classe 1
   stat_boxplot(geom = 'errorbar',
                width=0.3,
                position = position_dodge(width = 0.65))+
   geom_boxplot(fill='#F8F8FF',
                color="black",
                outlier.shape = 1, #se deixar NA fica só o jitter, se não, deixa 1
                width= 0.7)+
   labs(title = "Escherichia coli no período 2000-2010",
        x="Estação",
        y="NMP/100mL")+
   # geom_jitter(width = .05,
   #             alpha=.2,
   #             size=1.5,
   #             color="black")+
   scale_y_continuous(expand = expansion(mult = c(0.01, 0.01)),
                      n.breaks = 9,
                  limits = c(min(plan_wide_19902020$`Escherichia coli`, na.rm = TRUE),
                             max(plan_wide_19902020$`Escherichia coli`, na.rm = TRUE)),
                      trans = "log10",
                      labels = scales::number_format(accuracy = 1,
                                                     decimal.mark = ",",
                                                     big.mark = " "))+
    scale_x_discrete(limits = c("87398500", "87398980", "87398900", "87398950", "87405500", "87406900", "87409900"))+
   geom_smooth(method = "lm",
               se=FALSE, #se deixar TRUE gera o intervalo de confiança de 95%
               aes(group=1),
               alpha=.5,
               na.rm = TRUE,
               size = 1)+
   # geom_line(aes(color="red"),
   #           alpha=.0)+
   # scale_color_manual("Legenda",
   #                    guide="legend",
   #                    values = c("Pior Classe"="#ac5079",
   #                               "Classe 3"="#fcf7ab",
   #                               "Classe 2"="#70c18c",
   #                               "Classe 1"="#8dcdeb"))+
   # guides(color=guide_legend(override.aes = list(linetype=c(1,1,1,1),
   #                                               lwd=c(2,2,2,2),
   #                                               shape=c(NA,NA,NA,NA),
   #                                               alpha=1)))+
   theme_classic())
```

```{r Gráfico Ecoli periodo3, warning = FALSE, message = FALSE}
(ecoli_p3 <- ggplot(plan_wide_19902020 %>% 
                      filter(ANO_COLETA>"2010" &
                             ANO_COLETA<="2020"),
                    aes(CODIGO,
                        `Escherichia coli`))+
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=3200,
            ymax=Inf,
            alpha=1,
            fill="#ac5079")+ #>pior classe
   #annotate("rect",
   #        xmin=-Inf,
   #       xmax=Inf,
   #      ymin=2,
   #     ymax=4,
   #    alpha=1,
   #   fill="#eb5661")+ #classe 4
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=800,
            ymax=3200,
            alpha=1,
            fill="#fcf7ab")+ #classe 3
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=160,
            ymax=800,
            alpha=1,
            fill="#70c18c")+ #classe 2
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=0,
            ymax=160,
            alpha=1,
            fill="#8dcdeb")+ #classe 1
   stat_boxplot(geom = 'errorbar',
                width=0.3,
                position = position_dodge(width = 0.65))+
   geom_boxplot(fill='#F8F8FF',
                color="black",
                outlier.shape = 1, #se deixar NA fica só o jitter, se não, deixa 1
                width= 0.7)+
   labs(title = "Escherichia coli no período 2010-2020",
        x="Estação",
        y="NMP/100mL")+
   # geom_jitter(width = .05,
   #             alpha=.2,
   #             size=1.5,
   #             color="black")+
   scale_y_continuous(expand = expansion(mult = c(0.01, 0.01)),
                      n.breaks = 9,
                  limits = c(min(plan_wide_19902020$`Escherichia coli`, na.rm = TRUE),
                             max(plan_wide_19902020$`Escherichia coli`, na.rm = TRUE)),
                      trans = "log10",
                      labels = scales::number_format(accuracy = 1,
                                                     decimal.mark = ",",
                                                     big.mark = " "))+
    scale_x_discrete(limits = c("87398500", "87398980", "87398900", "87398950", "87405500", "87406900", "87409900"))+
   geom_smooth(method = "lm",
               se=FALSE, #se deixar TRUE gera o intervalo de confiança de 95%
               aes(group=1),
               alpha=.5,
               na.rm = TRUE,
               size = 1)+
   # geom_line(aes(color="red"),
   #           alpha=.0)+
   # scale_color_manual("Legenda",
   #                    guide="legend",
   #                    values = c("Pior Classe"="#ac5079",
   #                               "Classe 3"="#fcf7ab",
   #                               "Classe 2"="#70c18c",
   #                               "Classe 1"="#8dcdeb"))+
   # guides(color=guide_legend(override.aes = list(linetype=c(1,1,1,1),
   #                                               lwd=c(2,2,2,2),
   #                                               shape=c(NA,NA,NA,NA),
   #                                               alpha=1)))+
   theme_classic())
```

```{r Gráfico ecoli 3 periodos juntos, warning=FALSE, message=FALSE}
grid.arrange(ecoli_p1, ecoli_p2, ecoli_p3, ncol = 3)
```

```{r Sumário Ecoli}
(sum_ecoli_p1 <- plan_wide_19902020 %>%
   select(CODIGO, `Escherichia coli`, ANO_COLETA) %>% 
   filter(ANO_COLETA>"1990" &
            ANO_COLETA<="2000") %>% 
   group_by(CODIGO) %>% 
   summarize(
     min = 
       min(`Escherichia coli`, 
           na.rm = TRUE),
     q1 = 
       quantile(`Escherichia coli`, 0.25, 
                na.rm = TRUE),
     median = 
       median(`Escherichia coli`, 
              na.rm = TRUE),
     mean = 
       mean(`Escherichia coli`, 
            na.rm= TRUE),
     q3 = 
       quantile(`Escherichia coli`, 0.75, 
                na.rm = TRUE),
     max = 
       max(`Escherichia coli`, 
           na.rm = TRUE))
)

(sum_ecoli_p2 <- plan_wide_19902020 %>%
   select(CODIGO, `Escherichia coli`, ANO_COLETA) %>% 
   filter(ANO_COLETA>"2000" &
          ANO_COLETA<="2010") %>% 
   group_by(CODIGO) %>% 
   summarize(
     min = 
       min(`Escherichia coli`, 
           na.rm = TRUE),
     q1 = 
       quantile(`Escherichia coli`, 0.25, 
                na.rm = TRUE),
     median = 
       median(`Escherichia coli`, 
              na.rm = TRUE),
     mean = 
       mean(`Escherichia coli`, 
            na.rm= TRUE),
     q3 = 
       quantile(`Escherichia coli`, 0.75, 
                na.rm = TRUE),
     max = 
       max(`Escherichia coli`, 
           na.rm = TRUE))
)

(sum_ecoli_p3 <- plan_wide_19902020 %>%
   select(CODIGO, `Escherichia coli`, ANO_COLETA) %>% 
   filter(ANO_COLETA>"2010" &
          ANO_COLETA<="2020") %>% 
   group_by(CODIGO) %>% 
   summarize(
     min = 
       min(`Escherichia coli`, 
           na.rm = TRUE),
     q1 = 
       quantile(`Escherichia coli`, 0.25, 
                na.rm = TRUE),
     median = 
       median(`Escherichia coli`, 
              na.rm = TRUE),
     mean = 
       mean(`Escherichia coli`, 
            na.rm= TRUE),
     q3 = 
       quantile(`Escherichia coli`, 0.75, 
                na.rm = TRUE),
     max = 
       max(`Escherichia coli`, 
           na.rm = TRUE))
)
```

```{r Salvando ecoli}
ggsave("ecoli_p1.png",
       plot = ecoli_p1,
       path = "./graficos",
       dpi = 300,
       type = "cairo")


ggsave("ecoli_p2.png",
       plot = ecoli_p2,
       path = "./graficos",
       dpi = 300,
       type = "cairo")

ggsave("ecoli_p3.png",
       plot = ecoli_p3,
       path = "./graficos",
       dpi = 300,
       type = "cairo")

ggsave("ecoli_3periodos.png",
       units = c("px"),
       width = 4500,
       height = 2993,
       plot = grid.arrange(ecoli_p1, ecoli_p2, ecoli_p3, ncol = 3),
       path = "./graficos",
       dpi = 300,
       type = "cairo")
```
### Nitrogênio amoniacal

```{r Gráfico Nitrogênio total periodo1, warning = FALSE, message = FALSE}
(namon_p1 <- ggplot(plan_wide_19902020 %>% 
                      filter(ANO_COLETA>"1990" &
                             ANO_COLETA<="2000"),
                    aes(CODIGO,
                        `Nitrogênio total`))+
    annotate("rect",
             xmin=-Inf,
             xmax=Inf,
             ymin=0,
             ymax=3.7,
             alpha=1,
             fill="#8dcdeb")+ #classe 1
    annotate("rect",
             xmin=-Inf,
             xmax=Inf,
             ymin=13.3,
             ymax=Inf,
             alpha=1,
             fill="#ac5079")+ #>pior classe
    annotate("rect",
            xmin=-Inf,
             xmax=Inf,
             ymin=3.7,
             ymax=13.3,
           alpha=1,
             fill="#fcf7ab")+ #classe 3
    stat_boxplot(geom = 'errorbar',
                 width=0.3,
                 position = position_dodge(width = 0.65))+
    geom_boxplot(fill='#F8F8FF',
                 color="black",
                 outlier.shape = 1, #se deixar NA fica só o jitter, se não, deixa 1
                 width= 0.7)+
    labs(title = "Nitrogênio amoniacal no período 1990-2000",
         x="Estação",
         y="mg/L")+
    # geom_jitter(width = .05,
    #             alpha=.2,
    #             size=1.5,
    #             color="black")+
   scale_y_continuous(expand = expansion(mult = c(0.01, 0.05)),
                      n.breaks = 9,
                  limits = c(min(plan_wide_19902020$`Nitrogênio total`, na.rm = TRUE),
                             max(plan_wide_19902020$`Nitrogênio total`, na.rm = TRUE)),
                      trans = "log10",
                      labels = scales::number_format(accuracy = .001,
                                                     decimal.mark = ",",
                                                     big.mark = " "))+
    scale_x_discrete(limits = c("87398500", "87398980", "87398900", "87398950", "87405500", "87406900", "87409900"))+
    geom_smooth(method = "lm",
                se=FALSE, #se deixar TRUE gera o intervalo de confiança de 95%
                aes(group=1),
                alpha=.5,
                na.rm = TRUE,
                size = 1)+
    # geom_line(aes(color="red"),
    #           alpha=.0)+
    # scale_color_manual("Legenda",
    #                    guide="legend",
    #                    values = c("Pior Classe"="#ac5079",
    #                               "Classe 3"="#fcf7ab",
    #                               "Classe 1"="#8dcdeb"))+
    # guides(color=guide_legend(override.aes = list(linetype=c(1,1,1),
    #                                               lwd=c(2,2,2),
    #                                               shape=c(NA,NA,NA),
    #                                               alpha=1)))+
    theme_classic())
```

```{r Gráfico Nitrogênio total periodo2, warning = FALSE, message = FALSE}
(namon_p2 <- ggplot(plan_wide_19902020 %>% 
                      filter(ANO_COLETA>"2000" &
                             ANO_COLETA<="2010"),
                    aes(CODIGO,
                        `Nitrogênio total`))+
    annotate("rect",
             xmin=-Inf,
             xmax=Inf,
             ymin=0,
             ymax=3.7,
             alpha=1,
             fill="#8dcdeb")+ #classe 1
    annotate("rect",
             xmin=-Inf,
             xmax=Inf,
             ymin=13.3,
             ymax=Inf,
             alpha=1,
             fill="#ac5079")+ #>pior classe
    annotate("rect",
            xmin=-Inf,
             xmax=Inf,
             ymin=3.7,
             ymax=13.3,
           alpha=1,
             fill="#fcf7ab")+ #classe 3
    stat_boxplot(geom = 'errorbar',
                 width=0.3,
                 position = position_dodge(width = 0.65))+
    geom_boxplot(fill='#F8F8FF',
                 color="black",
                 outlier.shape = 1, #se deixar NA fica só o jitter, se não, deixa 1
                 width= 0.7)+
    labs(title = "Nitrogênio amoniacal no período 2000-2010",
         x="Estação",
         y="mg/L")+
    # geom_jitter(width = .05,
    #             alpha=.2,
    #             size=1.5,
    #             color="black")+
   scale_y_continuous(expand = expansion(mult = c(0.01, 0.05)),
                      n.breaks = 9,
                  limits = c(min(plan_wide_19902020$`Nitrogênio total`, na.rm = TRUE),
                             max(plan_wide_19902020$`Nitrogênio total`, na.rm = TRUE)),
                      trans = "log10",
                      labels = scales::number_format(accuracy = .001,
                                                     decimal.mark = ",",
                                                     big.mark = " "))+
    scale_x_discrete(limits = c("87398500", "87398980", "87398900", "87398950", "87405500", "87406900", "87409900"))+
    geom_smooth(method = "lm",
                se=FALSE, #se deixar TRUE gera o intervalo de confiança de 95%
                aes(group=1),
                alpha=.5,
                na.rm = TRUE,
                size = 1)+
    # geom_line(aes(color="red"),
    #           alpha=.0)+
    # scale_color_manual("Legenda",
    #                    guide="legend",
    #                    values = c("Pior Classe"="#ac5079",
    #                               "Classe 3"="#fcf7ab",
    #                               "Classe 1"="#8dcdeb"))+
    # guides(color=guide_legend(override.aes = list(linetype=c(1,1,1),
    #                                               lwd=c(2,2,2),
    #                                               shape=c(NA,NA,NA),
    #                                               alpha=1)))+
    theme_classic())
```

```{r Gráfico Nitrogênio total periodo3, warning = FALSE, message = FALSE}
(namon_p3 <- ggplot(plan_wide_19902020 %>% 
                      filter(ANO_COLETA>"2010" &
                             ANO_COLETA<="2020"),
                    aes(CODIGO,
                        `Nitrogênio total`))+
    annotate("rect",
             xmin=-Inf,
             xmax=Inf,
             ymin=0,
             ymax=3.7,
             alpha=1,
             fill="#8dcdeb")+ #classe 1
    annotate("rect",
             xmin=-Inf,
             xmax=Inf,
             ymin=13.3,
             ymax=Inf,
             alpha=1,
             fill="#ac5079")+ #>pior classe
    annotate("rect",
            xmin=-Inf,
             xmax=Inf,
             ymin=3.7,
             ymax=13.3,
           alpha=1,
             fill="#fcf7ab")+ #classe 3
    stat_boxplot(geom = 'errorbar',
                 width=0.3,
                 position = position_dodge(width = 0.65))+
    geom_boxplot(fill='#F8F8FF',
                 color="black",
                 outlier.shape = 1, #se deixar NA fica só o jitter, se não, deixa 1
                 width= 0.7)+
    labs(title = "Nitrogênio amoniacal no período 2010-2020",
         x="Estação",
         y="mg/L")+
    # geom_jitter(width = .05,
    #             alpha=.2,
    #             size=1.5,
    #             color="black")+
   scale_y_continuous(expand = expansion(mult = c(0.01, 0.05)),
                      n.breaks = 9,
                  limits = c(min(plan_wide_19902020$`Nitrogênio total`, na.rm = TRUE),
                             max(plan_wide_19902020$`Nitrogênio total`, na.rm = TRUE)),
                      trans = "log10",
                      labels = scales::number_format(accuracy = .001,
                                                     decimal.mark = ",",
                                                     big.mark = " "))+
    scale_x_discrete(limits = c("87398500", "87398980", "87398900", "87398950", "87405500", "87406900", "87409900"))+
    geom_smooth(method = "lm",
                se=FALSE, #se deixar TRUE gera o intervalo de confiança de 95%
                aes(group=1),
                alpha=.5,
                na.rm = TRUE,
                size = 1)+
    # geom_line(aes(color="red"),
    #           alpha=.0)+
    # scale_color_manual("Legenda",
    #                    guide="legend",
    #                    values = c("Pior Classe"="#ac5079",
    #                               "Classe 3"="#fcf7ab",
    #                               "Classe 1"="#8dcdeb"))+
    # guides(color=guide_legend(override.aes = list(linetype=c(1,1,1),
    #                                               lwd=c(2,2,2),
    #                                               shape=c(NA,NA,NA),
    #                                               alpha=1)))+
    theme_classic())
```

```{r Gráfico Namon 3 periodos juntos, warning=FALSE, message=FALSE}
# namon_p1
# namon_p2
# namon_p3
grid.arrange(namon_p1, namon_p2, namon_p3, ncol = 3)
# grid.arrange(dbo_p1, dbo_p2, dbo_p3,
#              iqa_dbo1, iqa_dbo2, iqa_dbo3,
#              ncol = 3, nrow=2)
```

```{r Sumário Nitrogênio total}
(sum_namon_p1 <- plan_wide_19902020 %>%
   select(CODIGO, `Nitrogênio total`, ANO_COLETA) %>% 
   filter(ANO_COLETA>"1990" &
          ANO_COLETA<="2000") %>% 
   group_by(CODIGO) %>% 
   summarize(
     min = 
       min(`Nitrogênio total`, 
           na.rm = TRUE),
     q1 = 
       quantile(`Nitrogênio total`, 0.25, 
                na.rm = TRUE),
     median = 
       median(`Nitrogênio total`, 
              na.rm = TRUE),
     mean = 
       mean(`Nitrogênio total`, 
            na.rm= TRUE),
     q3 = 
       quantile(`Nitrogênio total`, 0.75, 
                na.rm = TRUE),
     max = 
       max(`Nitrogênio total`, 
           na.rm = TRUE))
)

(sum_namon_p2 <- plan_wide_19902020 %>%
   select(CODIGO, `Nitrogênio total`, ANO_COLETA) %>% 
   filter(ANO_COLETA>"2000" &
          ANO_COLETA<="2010") %>% 
   group_by(CODIGO) %>% 
   summarize(
     min = 
       min(`Nitrogênio total`, 
           na.rm = TRUE),
     q1 = 
       quantile(`Nitrogênio total`, 0.25, 
                na.rm = TRUE),
     median = 
       median(`Nitrogênio total`, 
              na.rm = TRUE),
     mean = 
       mean(`Nitrogênio total`, 
            na.rm= TRUE),
     q3 = 
       quantile(`Nitrogênio total`, 0.75, 
                na.rm = TRUE),
     max = 
       max(`Nitrogênio total`, 
           na.rm = TRUE))
)

(sum_namon_p3 <- plan_wide_19902020 %>%
   select(CODIGO, `Nitrogênio total`, ANO_COLETA) %>% 
   filter(ANO_COLETA>"2010" &
          ANO_COLETA<="2020") %>% 
   group_by(CODIGO) %>% 
   summarize(
     min = 
       min(`Nitrogênio total`, 
           na.rm = TRUE),
     q1 = 
       quantile(`Nitrogênio total`, 0.25, 
                na.rm = TRUE),
     median = 
       median(`Nitrogênio total`, 
              na.rm = TRUE),
     mean = 
       mean(`Nitrogênio total`, 
            na.rm= TRUE),
     q3 = 
       quantile(`Nitrogênio total`, 0.75, 
                na.rm = TRUE),
     max = 
       max(`Nitrogênio total`, 
           na.rm = TRUE))
)
```

```{r Salvando namon}
ggsave("namon_p1.png",
       plot = namon_p1,
       path = "./graficos",
       dpi = 300,
       type = "cairo")

ggsave("namon_p2.png",
       plot = namon_p2,
       path = "./graficos",
       dpi = 300,
       type = "cairo")

ggsave("namon_p3.png",
       plot = namon_p3,
       path = "./graficos",
       dpi = 300,
       type = "cairo")

ggsave("namon_3periodos.png",
       units = c("px"),
       width = 4500,
       height = 2993,
       plot = grid.arrange(namon_p1, namon_p2, namon_p3, ncol = 3),
       path = "./graficos",
       dpi = 300,
       type = "cairo")
```

### Turbidez
```{r Gráfico Turbidez periodo1, warning = FALSE, message = FALSE}
(turb_p1 <- ggplot(plan_wide_19902020 %>% 
                        filter(ANO_COLETA>"1990" &
                               ANO_COLETA<="2000"),
                      aes(CODIGO,
                          Turbidez))+
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=100,
            ymax=Inf,
            alpha=1,
            fill="#ac5079")+ #>pior classe
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=40,
            ymax=100,
            alpha=1,
            fill="#fcf7ab")+ #classe 3
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=0,
            ymax=40,
            alpha=1,
            fill="#8dcdeb")+ #classe 1
   stat_boxplot(geom = 'errorbar',
                width=0.3,
                position = position_dodge(width = 0.65))+
   geom_boxplot(fill='#F8F8FF',
                color="black",
                outlier.shape = 1, #se deixar NA fica só o jitter, se não, deixa 1
                width= 0.7)+
   labs(title = "Turbidez no período 1990-2000",
        x="Estação",
        y="UNT")+
   # geom_jitter(width = .05,
   #             alpha=.2,
   #             size=1.5,
   #             color="black")+
    scale_y_continuous(expand = expansion(mult = c(0.05, 0.03)),
                      n.breaks = 8,
                  limits = c(min(plan_wide_19902020$Turbidez, na.rm = TRUE),
                             max(plan_wide_19902020$Turbidez, na.rm = TRUE)),
                      trans = "log10",
                      labels = scales::number_format(accuracy = 1,
                                                     decimal.mark = ",",
                                                     big.mark = " "))+
    scale_x_discrete(limits = c("87398500", "87398980", "87398900", "87398950", "87405500", "87406900", "87409900"))+
   geom_smooth(method = "lm",
               se=FALSE, #se deixar TRUE gera o intervalo de confiança de 95%
               aes(group=1),
               alpha=.5,
               na.rm = TRUE,
               size = 1)+
   # geom_line(aes(color="red"),
   #           alpha=.0)+
   # scale_color_manual("Legenda",
   #                    guide="legend",
   #                    values = c("Pior Classe"="#ac5079",
   #                               "Classe 3"="#fcf7ab",
   #                               "Classe 1"="#8dcdeb"))+
   # guides(color=guide_legend(override.aes = list(linetype=c(1,1,1),
   #                                               lwd=c(2,2,2),
   #                                               shape=c(NA,NA,NA),
   #                                               alpha=1)))+
   theme_classic())
```

```{r Gráfico Turbidez periodo2, warning = FALSE, message = FALSE}
(turb_p2 <- ggplot(plan_wide_19902020 %>% 
                     filter(ANO_COLETA>"2000" &
                            ANO_COLETA<="2010"),
                      aes(CODIGO,
                          Turbidez))+
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=100,
            ymax=Inf,
            alpha=1,
            fill="#ac5079")+ #>pior classe
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=40,
            ymax=100,
            alpha=1,
            fill="#fcf7ab")+ #classe 3
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=0,
            ymax=40,
            alpha=1,
            fill="#8dcdeb")+ #classe 1
   stat_boxplot(geom = 'errorbar',
                width=0.3,
                position = position_dodge(width = 0.65))+
   geom_boxplot(fill='#F8F8FF',
                color="black",
                outlier.shape = 1, #se deixar NA fica só o jitter, se não, deixa 1
                width= 0.7)+
   labs(title = "Turbidez no período 2000-2010",
        x="Estação",
        y="UNT")+
   # geom_jitter(width = .05,
   #             alpha=.2,
   #             size=1.5,
   #             color="black")+
    scale_y_continuous(expand = expansion(mult = c(0.05, 0.03)),
                      n.breaks = 8,
                  limits = c(min(plan_wide_19902020$Turbidez, na.rm = TRUE),
                             max(plan_wide_19902020$Turbidez, na.rm = TRUE)),
                      trans = "log10",
                      labels = scales::number_format(accuracy = 1,
                                                     decimal.mark = ",",
                                                     big.mark = " "))+
    scale_x_discrete(limits = c("87398500", "87398980", "87398900", "87398950", "87405500", "87406900", "87409900"))+
   geom_smooth(method = "lm",
               se=FALSE, #se deixar TRUE gera o intervalo de confiança de 95%
               aes(group=1),
               alpha=.5,
               na.rm = TRUE,
               size = 1)+
   # geom_line(aes(color="red"),
   #           alpha=.0)+
   # scale_color_manual("Legenda",
   #                    guide="legend",
   #                    values = c("Pior Classe"="#ac5079",
   #                               "Classe 3"="#fcf7ab",
   #                               "Classe 1"="#8dcdeb"))+
   # guides(color=guide_legend(override.aes = list(linetype=c(1,1,1),
   #                                               lwd=c(2,2,2),
   #                                               shape=c(NA,NA,NA),
   #                                               alpha=1)))+
   theme_classic())
```

```{r Gráfico Turbidez periodo3, warning = FALSE, message = FALSE}
(turb_p3 <- ggplot(plan_wide_19902020 %>% 
                     filter(ANO_COLETA>"2010" &
                            ANO_COLETA<="2020"),
                      aes(CODIGO,
                          Turbidez))+
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=100,
            ymax=Inf,
            alpha=1,
            fill="#ac5079")+ #>pior classe
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=40,
            ymax=100,
            alpha=1,
            fill="#fcf7ab")+ #classe 3
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=0,
            ymax=40,
            alpha=1,
            fill="#8dcdeb")+ #classe 1
   stat_boxplot(geom = 'errorbar',
                width=0.3,
                position = position_dodge(width = 0.65))+
   geom_boxplot(fill='#F8F8FF',
                color="black",
                outlier.shape = 1, #se deixar NA fica só o jitter, se não, deixa 1
                width= 0.7)+
   labs(title = "Turbidez no período 2010-2020",
        x="Estação",
        y="UNT")+
   # geom_jitter(width = .05,
   #             alpha=.2,
   #             size=1.5,
   #             color="black")+
    scale_y_continuous(expand = expansion(mult = c(0.05, 0.03)),
                      n.breaks = 8,
                  limits = c(min(plan_wide_19902020$Turbidez, na.rm = TRUE),
                             max(plan_wide_19902020$Turbidez, na.rm = TRUE)),
                      trans = "log10",
                      labels = scales::number_format(accuracy = 1,
                                                     decimal.mark = ",",
                                                     big.mark = " "))+
    scale_x_discrete(limits = c("87398500", "87398980", "87398900", "87398950", "87405500", "87406900", "87409900"))+
   geom_smooth(method = "lm",
               se=FALSE, #se deixar TRUE gera o intervalo de confiança de 95%
               aes(group=1),
               alpha=.5,
               na.rm = TRUE,
               size = 1)+
   # geom_line(aes(color="red"),
   #           alpha=.0)+
   # scale_color_manual("Legenda",
   #                    guide="legend",
   #                    values = c("Pior Classe"="#ac5079",
   #                               "Classe 3"="#fcf7ab",
   #                               "Classe 1"="#8dcdeb"))+
   # guides(color=guide_legend(override.aes = list(linetype=c(1,1,1),
   #                                               lwd=c(2,2,2),
   #                                               shape=c(NA,NA,NA),
   #                                               alpha=1)))+
   theme_classic())
```

```{r Gráfico turb 3 periodos juntos, warning=FALSE, message=FALSE}
# turb_p1
# turb_p2
# turb_p3
grid.arrange(turb_p1, turb_p2, turb_p3, ncol = 3)
# grid.arrange(dbo_p1, dbo_p2, dbo_p3,
#              iqa_dbo1, iqa_dbo2, iqa_dbo3,
#              ncol = 3, nrow=2)
```

```{r Sumário Turbidez}
(sum_turb_p1 <- plan_wide_19902020 %>%
   select(CODIGO, Turbidez, ANO_COLETA) %>% 
   filter(ANO_COLETA>"1990" &
          ANO_COLETA<="2000") %>% 
   group_by(CODIGO) %>% 
   summarize(
     min = 
       min(Turbidez, 
           na.rm = TRUE),
     q1 = 
       quantile(Turbidez, 0.25, 
                na.rm = TRUE),
     median = 
       median(Turbidez, 
              na.rm = TRUE),
     mean = 
       mean(Turbidez, 
            na.rm= TRUE),
     q3 = 
       quantile(Turbidez, 0.75, 
                na.rm = TRUE),
     max = 
       max(Turbidez, 
           na.rm = TRUE))
)

(sum_turb_p2 <- plan_wide_19902020 %>%
   select(CODIGO, Turbidez, ANO_COLETA) %>% 
   filter(ANO_COLETA>"2000" &
          ANO_COLETA<="2010") %>% 
   group_by(CODIGO) %>% 
   summarize(
     min = 
       min(Turbidez, 
           na.rm = TRUE),
     q1 = 
       quantile(Turbidez, 0.25, 
                na.rm = TRUE),
     median = 
       median(Turbidez, 
              na.rm = TRUE),
     mean = 
       mean(Turbidez, 
            na.rm= TRUE),
     q3 = 
       quantile(Turbidez, 0.75, 
                na.rm = TRUE),
     max = 
       max(Turbidez, 
           na.rm = TRUE))
)

(sum_turb_p3 <- plan_wide_19902020 %>%
   select(CODIGO, Turbidez, ANO_COLETA) %>% 
   filter(ANO_COLETA>"2010" &
          ANO_COLETA<="2020") %>% 
   group_by(CODIGO) %>% 
   summarize(
     min = 
       min(Turbidez, 
           na.rm = TRUE),
     q1 = 
       quantile(Turbidez, 0.25, 
                na.rm = TRUE),
     median = 
       median(Turbidez, 
              na.rm = TRUE),
     mean = 
       mean(Turbidez, 
            na.rm= TRUE),
     q3 = 
       quantile(Turbidez, 0.75, 
                na.rm = TRUE),
     max = 
       max(Turbidez, 
           na.rm = TRUE))
) 
```

```{r Salvando turb}
ggsave("turb_p1.png",
       plot = turb_p1,
       path = "./graficos",
       dpi = 300,
       type = "cairo")

ggsave("turb_p2.png",
       plot = turb_p2,
       path = "./graficos",
       dpi = 300,
       type = "cairo")

ggsave("turb_p3.png",
       plot = turb_p3,
       path = "./graficos",
       dpi = 300,
       type = "cairo")

ggsave("turb_3periodos.png",
       units = c("px"),
       width = 4500,
       height = 2993,
       plot = grid.arrange(turb_p1, turb_p2, turb_p3, ncol = 3),
       path = "./graficos",
       dpi = 300,
       type = "cairo")
```

### pH
```{r Gráfico pH periodo1, warning = FALSE, message = FALSE}
(pH_p1 <- ggplot(plan_wide_19902020 %>% 
                        filter(ANO_COLETA>"1990" &
                               ANO_COLETA<="2000"),
                      aes(CODIGO,
                          pH))+
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=-Inf,
            ymax=6,
            alpha=1,
            fill="#eb5661")+ #classe 4
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=9,
            ymax=Inf,
            alpha=1,
            fill="#eb5661")+ #classe 4
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=6,
            ymax=9,
            alpha=1,
            fill="#8dcdeb")+ #classe 1
   stat_boxplot(geom = 'errorbar',
                width=0.3,
                position = position_dodge(width = 0.65))+
   geom_boxplot(fill='#F8F8FF',
                color="black",
                outlier.shape = 1, #se deixar NA fica só o jitter, se não, deixa 1
                width= 0.7)+
   labs(title = "pH no período 1990-2000",
        x="Estação",
        y="")+
   # geom_jitter(width = .05,
   #             alpha=.2,
   #             size=1.5,
   #             color="black")+
    scale_y_continuous(expand = expansion(mult = c(0.01, 0.01)),
                      n.breaks = 8,
                      limits = c(4,11),
                      labels = scales::number_format(accuracy = 1,
                                                     decimal.mark = ",",
                                                     big.mark = " "))+
    scale_x_discrete(limits = c("87398500", "87398980", "87398900", "87398950", "87405500", "87406900", "87409900"))+
   geom_smooth(method = "lm",
               se=FALSE, #se deixar TRUE gera o intervalo de confiança de 95%
               aes(group=1),
               alpha=.5,
               na.rm = TRUE,
               size = 1)+
   # geom_line(aes(color="red"),
   #           alpha=.0)+
   # scale_color_manual("Legenda",
   #                    guide="legend",
   #                    values = c("Pior Classe"="#ac5079",
   #                               "Classe 3"="#fcf7ab",
   #                               "Classe 1"="#8dcdeb"))+
   # guides(color=guide_legend(override.aes = list(linetype=c(1,1,1),
   #                                               lwd=c(2,2,2),
   #                                               shape=c(NA,NA,NA),
   #                                               alpha=1)))+
   theme_classic())
```

```{r Gráfico pH periodo2, warning = FALSE, message = FALSE}
(pH_p2 <- ggplot(plan_wide_19902020 %>% 
                        filter(ANO_COLETA>"2000" &
                               ANO_COLETA<="2010"),
                      aes(CODIGO,
                          pH))+
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=-Inf,
            ymax=6,
            alpha=1,
            fill="#eb5661")+ #classe 4
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=9,
            ymax=Inf,
            alpha=1,
            fill="#eb5661")+ #classe 4
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=6,
            ymax=9,
            alpha=1,
            fill="#8dcdeb")+ #classe 1
   stat_boxplot(geom = 'errorbar',
                width=0.3,
                position = position_dodge(width = 0.65))+
   geom_boxplot(fill='#F8F8FF',
                color="black",
                outlier.shape = 1, #se deixar NA fica só o jitter, se não, deixa 1
                width= 0.7)+
   labs(title = "pH no período 2000-2010",
        x="Estação",
        y="")+
   # geom_jitter(width = .05,
   #             alpha=.2,
   #             size=1.5,
   #             color="black")+
    scale_y_continuous(expand = expansion(mult = c(0.01, 0.01)),
                      n.breaks = 8,
                      limits = c(4,11),
                      labels = scales::number_format(accuracy = 1,
                                                     decimal.mark = ",",
                                                     big.mark = " "))+
    scale_x_discrete(limits = c("87398500", "87398980", "87398900", "87398950", "87405500", "87406900", "87409900"))+
   geom_smooth(method = "lm",
               se=FALSE, #se deixar TRUE gera o intervalo de confiança de 95%
               aes(group=1),
               alpha=.5,
               na.rm = TRUE,
               size = 1)+
   # geom_line(aes(color="red"),
   #           alpha=.0)+
   # scale_color_manual("Legenda",
   #                    guide="legend",
   #                    values = c("Pior Classe"="#ac5079",
   #                               "Classe 3"="#fcf7ab",
   #                               "Classe 1"="#8dcdeb"))+
   # guides(color=guide_legend(override.aes = list(linetype=c(1,1,1),
   #                                               lwd=c(2,2,2),
   #                                               shape=c(NA,NA,NA),
   #                                               alpha=1)))+
   theme_classic())
```

```{r Gráfico pH periodo3, warning = FALSE, message = FALSE}
(pH_p3 <- ggplot(plan_wide_19902020 %>% 
                        filter(ANO_COLETA>"2010" &
                               ANO_COLETA<="2020"),
                      aes(CODIGO,
                          pH))+
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=-Inf,
            ymax=6,
            alpha=1,
            fill="#eb5661")+ #classe 4
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=9,
            ymax=Inf,
            alpha=1,
            fill="#eb5661")+ #classe 4
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=6,
            ymax=9,
            alpha=1,
            fill="#8dcdeb")+ #classe 1
   stat_boxplot(geom = 'errorbar',
                width=0.3,
                position = position_dodge(width = 0.65))+
   geom_boxplot(fill='#F8F8FF',
                color="black",
                outlier.shape = 1, #se deixar NA fica só o jitter, se não, deixa 1
                width= 0.7)+
   labs(title = "pH no período 2010-2020",
        x="Estação",
        y="")+
   # geom_jitter(width = .05,
   #             alpha=.2,
   #             size=1.5,
   #             color="black")+
    scale_y_continuous(expand = expansion(mult = c(0.01, 0.01)),
                      n.breaks = 8,
                      limits = c(4,11),
                      labels = scales::number_format(accuracy = 1,
                                                     decimal.mark = ",",
                                                     big.mark = " "))+
    scale_x_discrete(limits = c("87398500", "87398980", "87398900", "87398950", "87405500", "87406900", "87409900"))+
   geom_smooth(method = "lm",
               se=FALSE, #se deixar TRUE gera o intervalo de confiança de 95%
               aes(group=1),
               alpha=.5,
               na.rm = TRUE,
               size = 1)+
   # geom_line(aes(color="red"),
   #           alpha=.0)+
   # scale_color_manual("Legenda",
   #                    guide="legend",
   #                    values = c("Pior Classe"="#ac5079",
   #                               "Classe 3"="#fcf7ab",
   #                               "Classe 1"="#8dcdeb"))+
   # guides(color=guide_legend(override.aes = list(linetype=c(1,1,1),
   #                                               lwd=c(2,2,2),
   #                                               shape=c(NA,NA,NA),
   #                                               alpha=1)))+
   theme_classic())
```

```{r Gráfico pH 3 periodos juntos, warning=FALSE, message=FALSE}
grid.arrange(pH_p1, pH_p2, pH_p3, ncol = 3)
# grid.arrange(namon_p1, namon_p2, namon_p3,
#              pH_p1, pH_p2, pH_p3,
#              ncol = 3, nrow=2)
```

```{r Sumário pH}
(sum_pH_p1 <- plan_wide_19902020 %>%
   select(CODIGO, pH, ANO_COLETA) %>% 
   filter(ANO_COLETA>"1990" &
          ANO_COLETA<="2000") %>% 
   group_by(CODIGO) %>% 
   summarize(
     min = 
       min(pH, 
           na.rm = TRUE),
     q1 = 
       quantile(pH, 0.25, 
                na.rm = TRUE),
     median = 
       median(pH, 
              na.rm = TRUE),
     mean = 
       mean(pH, 
            na.rm= TRUE),
     q3 = 
       quantile(pH, 0.75, 
                na.rm = TRUE),
     max = 
       max(pH, 
           na.rm = TRUE))
)

(sum_pH_p2 <- plan_wide_19902020 %>%
   select(CODIGO, pH, ANO_COLETA) %>% 
   filter(ANO_COLETA>"2000" &
          ANO_COLETA<="2010") %>% 
   group_by(CODIGO) %>% 
   summarize(
     min = 
       min(pH, 
           na.rm = TRUE),
     q1 = 
       quantile(pH, 0.25, 
                na.rm = TRUE),
     median = 
       median(pH, 
              na.rm = TRUE),
     mean = 
       mean(pH, 
            na.rm= TRUE),
     q3 = 
       quantile(pH, 0.75, 
                na.rm = TRUE),
     max = 
       max(pH, 
           na.rm = TRUE))
) 

(sum_pH_p3 <- plan_wide_19902020 %>%
   select(CODIGO, pH, ANO_COLETA) %>% 
   filter(ANO_COLETA>"2010" &
          ANO_COLETA<="2020") %>% 
   group_by(CODIGO) %>% 
   summarize(
     min = 
       min(pH, 
           na.rm = TRUE),
     q1 = 
       quantile(pH, 0.25, 
                na.rm = TRUE),
     median = 
       median(pH, 
              na.rm = TRUE),
     mean = 
       mean(pH, 
            na.rm= TRUE),
     q3 = 
       quantile(pH, 0.75, 
                na.rm = TRUE),
     max = 
       max(pH, 
           na.rm = TRUE))
)
```

```{r Salvando pH}
ggsave("pH_p1.png",
       plot = pH_p1,
       path = "./graficos",
       dpi = 300,
       type = "cairo")

ggsave("pH_p2.png",
       plot = pH_p2,
       path = "./graficos",
       dpi = 300,
       type = "cairo")

ggsave("pH_p3.png",
       plot = pH_p3,
       path = "./graficos",
       dpi = 300,
       type = "cairo")

ggsave("pH_3periodos.png",
       units = c("px"),
       width = 4500,
       height = 2993,
       plot = grid.arrange(pH_p1, pH_p2, pH_p3, ncol = 3),
       path = "./graficos",
       dpi = 300,
       type = "cairo")
```

### Sólidos totais

```{r Gráfico SólTot periodo1, warning = FALSE, message = FALSE}
(SolTot_p1 <- ggplot(plan_wide_19902020 %>% 
                        filter(ANO_COLETA>"1990" &
                               ANO_COLETA<="2000"),
                      aes(CODIGO,
                          `Sólidos totais`))+
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=500,
            ymax=Inf,
            alpha=1,
            fill="#eb5661")+ #classe 4
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=-Inf,
            ymax=500,
            alpha=1,
            fill="#8dcdeb")+ #classe 1
   stat_boxplot(geom = 'errorbar',
                width=0.3,
                position = position_dodge(width = 0.65))+
   geom_boxplot(fill='#F8F8FF',
                color="black",
                outlier.shape = 1, #se deixar NA fica só o jitter, se não, deixa 1
                width= 0.7)+
   labs(title = "Sólidos totais no período 1990-2000",
        x="Estação",
        y="")+
   # geom_jitter(width = .05,
   #             alpha=.2,
   #             size=1.5,
   #             color="black")+
    scale_y_continuous(expand = expansion(mult = c(0.01, 0.05)),
                      n.breaks = 8,
                      limits = c(0,
                             max(plan_wide_19902020$`Sólidos totais`, na.rm = TRUE)),
                      labels = scales::number_format(accuracy = 1,
                                                     decimal.mark = ",",
                                                     big.mark = " "))+
    scale_x_discrete(limits = c("87398500", "87398980", "87398900", "87398950", "87405500", "87406900", "87409900"))+
   geom_smooth(method = "lm",
               se=FALSE, #se deixar TRUE gera o intervalo de confiança de 95%
               aes(group=1),
               alpha=.5,
               na.rm = TRUE,
               size = 1)+
   # geom_line(aes(color="red"),
   #           alpha=.0)+
   # scale_color_manual("Legenda",
   #                    guide="legend",
   #                    values = c("Pior Classe"="#ac5079",
   #                               "Classe 3"="#fcf7ab",
   #                               "Classe 1"="#8dcdeb"))+
   # guides(color=guide_legend(override.aes = list(linetype=c(1,1,1),
   #                                               lwd=c(2,2,2),
   #                                               shape=c(NA,NA,NA),
   #                                               alpha=1)))+
   theme_classic())
```

```{r Gráfico SólTot periodo2, warning = FALSE, message = FALSE}
(SolTot_p2 <- ggplot(plan_wide_19902020 %>% 
                        filter(ANO_COLETA>"2000" &
                               ANO_COLETA<="2010"),
                      aes(CODIGO,
                          `Sólidos totais`))+
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=500,
            ymax=Inf,
            alpha=1,
            fill="#eb5661")+ #classe 4
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=-Inf,
            ymax=500,
            alpha=1,
            fill="#8dcdeb")+ #classe 1
   stat_boxplot(geom = 'errorbar',
                width=0.3,
                position = position_dodge(width = 0.65))+
   geom_boxplot(fill='#F8F8FF',
                color="black",
                outlier.shape = 1, #se deixar NA fica só o jitter, se não, deixa 1
                width= 0.7)+
   labs(title = "Sólidos totais no período 2000-2010",
        x="Estação",
        y="")+
   # geom_jitter(width = .05,
   #             alpha=.2,
   #             size=1.5,
   #             color="black")+
    scale_y_continuous(expand = expansion(mult = c(0.01, 0.05)),
                      n.breaks = 8,
                      limits = c(0,
                             max(plan_wide_19902020$`Sólidos totais`, na.rm = TRUE)),
                      labels = scales::number_format(accuracy = 1,
                                                     decimal.mark = ",",
                                                     big.mark = " "))+
    scale_x_discrete(limits = c("87398500", "87398980", "87398900", "87398950", "87405500", "87406900", "87409900"))+
   geom_smooth(method = "lm",
               se=FALSE, #se deixar TRUE gera o intervalo de confiança de 95%
               aes(group=1),
               alpha=.5,
               na.rm = TRUE,
               size = 1)+
   # geom_line(aes(color="red"),
   #           alpha=.0)+
   # scale_color_manual("Legenda",
   #                    guide="legend",
   #                    values = c("Pior Classe"="#ac5079",
   #                               "Classe 3"="#fcf7ab",
   #                               "Classe 1"="#8dcdeb"))+
   # guides(color=guide_legend(override.aes = list(linetype=c(1,1,1),
   #                                               lwd=c(2,2,2),
   #                                               shape=c(NA,NA,NA),
   #                                               alpha=1)))+
   theme_classic())
```

```{r Gráfico SólTot periodo3, warning = FALSE, message = FALSE}
(SolTot_p3 <- ggplot(plan_wide_19902020 %>% 
                        filter(ANO_COLETA>"2010" &
                               ANO_COLETA<="2020"),
                      aes(CODIGO,
                          `Sólidos totais`))+
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=500,
            ymax=Inf,
            alpha=1,
            fill="#eb5661")+ #classe 4
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=-Inf,
            ymax=500,
            alpha=1,
            fill="#8dcdeb")+ #classe 1
   stat_boxplot(geom = 'errorbar',
                width=0.3,
                position = position_dodge(width = 0.65))+
   geom_boxplot(fill='#F8F8FF',
                color="black",
                outlier.shape = 1, #se deixar NA fica só o jitter, se não, deixa 1
                width= 0.7)+
   labs(title = "Sólidos totais no período 2010-2020",
        x="Estação",
        y="")+
   # geom_jitter(width = .05,
   #             alpha=.2,
   #             size=1.5,
   #             color="black")+
    scale_y_continuous(expand = expansion(mult = c(0.01, 0.05)),
                      n.breaks = 8,
                      limits = c(0,
                             max(plan_wide_19902020$`Sólidos totais`, na.rm = TRUE)),
                      labels = scales::number_format(accuracy = 1,
                                                     decimal.mark = ",",
                                                     big.mark = " "))+
    scale_x_discrete(limits = c("87398500", "87398980", "87398900", "87398950", "87405500", "87406900", "87409900"))+
   geom_smooth(method = "lm",
               se=FALSE, #se deixar TRUE gera o intervalo de confiança de 95%
               aes(group=1),
               alpha=.5,
               na.rm = TRUE,
               size = 1)+
   # geom_line(aes(color="red"),
   #           alpha=.0)+
   # scale_color_manual("Legenda",
   #                    guide="legend",
   #                    values = c("Pior Classe"="#ac5079",
   #                               "Classe 3"="#fcf7ab",
   #                               "Classe 1"="#8dcdeb"))+
   # guides(color=guide_legend(override.aes = list(linetype=c(1,1,1),
   #                                               lwd=c(2,2,2),
   #                                               shape=c(NA,NA,NA),
   #                                               alpha=1)))+
   theme_classic())
```

```{r Gráfico SólTot 3 periodos juntos, warning=FALSE, message=FALSE}
grid.arrange(SolTot_p1, SolTot_p2, SolTot_p3, ncol = 3)
# grid.arrange(dbo_p1, dbo_p2, dbo_p3,
#              iqa_dbo1, iqa_dbo2, iqa_dbo3,
#              ncol = 3, nrow=2)
```

```{r Sumário Sólidos Totais}
(sum_SolTot_p1 <- plan_wide_19902020 %>%
   select(CODIGO, `Sólidos totais`, ANO_COLETA) %>% 
   filter(ANO_COLETA>"1990" &
          ANO_COLETA<="2000") %>% 
   group_by(CODIGO) %>% 
   summarize(
     min = 
       min(`Sólidos totais`, 
           na.rm = TRUE),
     q1 = 
       quantile(`Sólidos totais`, 0.25, 
                na.rm = TRUE),
     median = 
       median(`Sólidos totais`, 
              na.rm = TRUE),
     mean = 
       mean(`Sólidos totais`, 
            na.rm= TRUE),
     q3 = 
       quantile(`Sólidos totais`, 0.75, 
                na.rm = TRUE),
     max = 
       max(`Sólidos totais`, 
           na.rm = TRUE))
)

(sum_SolTot_p2 <- plan_wide_19902020 %>%
   select(CODIGO, `Sólidos totais`, ANO_COLETA) %>% 
   filter(ANO_COLETA>"2000" &
          ANO_COLETA<="2010") %>% 
   group_by(CODIGO) %>% 
   summarize(
     min = 
       min(`Sólidos totais`, 
           na.rm = TRUE),
     q1 = 
       quantile(`Sólidos totais`, 0.25, 
                na.rm = TRUE),
     median = 
       median(`Sólidos totais`, 
              na.rm = TRUE),
     mean = 
       mean(`Sólidos totais`, 
            na.rm= TRUE),
     q3 = 
       quantile(`Sólidos totais`, 0.75, 
                na.rm = TRUE),
     max = 
       max(`Sólidos totais`, 
           na.rm = TRUE))
)

(sum_SolTot_p3 <- plan_wide_19902020 %>%
   select(CODIGO, `Sólidos totais`, ANO_COLETA) %>% 
   filter(ANO_COLETA>"2010" &
          ANO_COLETA<="2020") %>% 
   group_by(CODIGO) %>% 
   summarize(
     min = 
       min(`Sólidos totais`, 
           na.rm = TRUE),
     q1 = 
       quantile(`Sólidos totais`, 0.25, 
                na.rm = TRUE),
     median = 
       median(`Sólidos totais`, 
              na.rm = TRUE),
     mean = 
       mean(`Sólidos totais`, 
            na.rm= TRUE),
     q3 = 
       quantile(`Sólidos totais`, 0.75, 
                na.rm = TRUE),
     max = 
       max(`Sólidos totais`, 
           na.rm = TRUE))
)
```

```{r Salvando SolTot}
ggsave("SolTot_p1.png",
       plot = SolTot_p1,
       path = "./graficos",
       dpi = 300,
       type = "cairo")

ggsave("SolTot_p2.png",
       plot = SolTot_p2,
       path = "./graficos",
       dpi = 300,
       type = "cairo")

ggsave("SolTot_p3.png",
       plot = SolTot_p3,
       path = "./graficos",
       dpi = 300,
       type = "cairo")

ggsave("SolTot_3periodos.png",
       units = c("px"),
       width = 4500,
       height = 2993,
       plot = grid.arrange(SolTot_p1, SolTot_p2, SolTot_p3, ncol = 3),
       path = "./graficos",
       dpi = 300,
       type = "cairo")
```

### IQA

```{r Gráfico IQA periodo1, echo = FALSE, message=FALSE, warning=FALSE}
plan_wide_19902020 <- plan_wide_19902020 %>% 
   mutate(IQA = ifelse(IQA == 0, NA, IQA))

(iqa_p1 <-ggplot(plan_wide_19902020 %>% 
                          filter(ANO_COLETA > "1990" &
                                 ANO_COLETA <= "2000"),
                        aes(CODIGO,
                            IQA, na.rm = TRUE))+
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=-Inf,
            ymax=19,
            alpha=1,
            fill="#ac5079")+ #>pior classe
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=19,
            ymax=36,
            alpha=1,
            fill="#eb5661")+ #classe 4
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=36,
            ymax=51,
            alpha=1,
            fill="#fcf7ab")+ #classe 3
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=51,
            ymax=79,
            alpha=1,
            fill="#70c18c")+ #classe 2
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=79,
            ymax=Inf,
            alpha=1,
            fill="#8dcdeb")+ #classe 1
   stat_boxplot(geom = 'errorbar',
                width=0.3,
                position = position_dodge(width = 0.65),
                na.rm = TRUE)+
   geom_boxplot(fill='#F8F8FF',
                color="black",
                outlier.shape = 1, #se deixar NA fica só o jitter, se não, deixa 1
                width= 0.7,
                na.rm = TRUE)+
   labs(title = "Variação do IQA no período 1990-2000",
        x="Estação",
        y="")+
   # geom_jitter(width = .05,
   #             alpha=.2,
   #             size=1.5,
   #             color="black")+
   scale_y_continuous(expand = expansion(mult = c(0,0)),
                      n.breaks = 6,
                      limits = c(-1,101))+
    scale_x_discrete(limits = c("87398500", "87398980", "87398900", "87398950", "87405500", "87406900", "87409900"))+
   geom_smooth(method = "lm",
               se=FALSE, #se deixar TRUE gera o intervalo de confiança de 95%
               aes(group=1),
               alpha=.5,
               na.rm = TRUE,
               size = 1)+
   # geom_line(aes(color="red"),
   #           alpha=.0)+
   # scale_color_manual("Legenda",
   #                    guide="legend",
   #                    values = c("Ótima"="#8dcdeb",
   #                               "Boa"="#70c18c",
   #                               "Regular"="#fcf7ab",
   #                               "Ruim"="#eb5661",
   #                               "Péssima"="#ac5079"))+
   # guides(color=guide_legend(override.aes = list(linetype=c(1,1,1,1,1),
   #                                               lwd=c(2,2,2,2,2),
   #                                               shape=c(NA,NA,NA,NA,NA),
   #                                               alpha=1)))+
   theme(legend.position = "bottom")+
   theme_classic())
```

```{r Gráfico IQA periodo2, echo = FALSE, message=FALSE, warning=FALSE}
(iqa_p2 <-ggplot(plan_wide_19902020 %>% 
                          filter(ANO_COLETA > "2000" &
                                 ANO_COLETA <= "2010"),
                        aes(CODIGO,
                            IQA, na.rm = TRUE))+
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=-Inf,
            ymax=19,
            alpha=1,
            fill="#ac5079")+ #>pior classe
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=19,
            ymax=36,
            alpha=1,
            fill="#eb5661")+ #classe 4
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=36,
            ymax=51,
            alpha=1,
            fill="#fcf7ab")+ #classe 3
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=51,
            ymax=79,
            alpha=1,
            fill="#70c18c")+ #classe 2
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=79,
            ymax=Inf,
            alpha=1,
            fill="#8dcdeb")+ #classe 1
   stat_boxplot(geom = 'errorbar',
                width=0.3,
                position = position_dodge(width = 0.65),
                na.rm = TRUE)+
   geom_boxplot(fill='#F8F8FF',
                color="black",
                outlier.shape = 1, #se deixar NA fica só o jitter, se não, deixa 1
                width= 0.7,
                na.rm = TRUE)+
   labs(title = "Variação do IQA no período 2000-2010",
        x="Estação",
        y="")+
   # geom_jitter(width = .05,
   #             alpha=.2,
   #             size=1.5,
   #             color="black")+
   scale_y_continuous(expand = expansion(mult = c(0,0)),
                      n.breaks = 6,
                      limits = c(-1,101))+
    scale_x_discrete(limits = c("87398500", "87398980", "87398900", "87398950", "87405500", "87406900", "87409900"))+
   geom_smooth(method = "lm",
               se=FALSE, #se deixar TRUE gera o intervalo de confiança de 95%
               aes(group=1),
               alpha=.5,
               na.rm = TRUE,
               size = 1)+
   # geom_line(aes(color="red"),
   #           alpha=.0)+
   # scale_color_manual("Legenda",
   #                    guide="legend",
   #                    values = c("Ótima"="#8dcdeb",
   #                               "Boa"="#70c18c",
   #                               "Regular"="#fcf7ab",
   #                               "Ruim"="#eb5661",
   #                               "Péssima"="#ac5079"))+
   # guides(color=guide_legend(override.aes = list(linetype=c(1,1,1,1,1),
   #                                               lwd=c(2,2,2,2,2),
   #                                               shape=c(NA,NA,NA,NA,NA),
   #                                               alpha=1)))+
   theme(legend.position = "bottom")+
   theme_classic())
```

```{r Gráfico IQA periodo3, echo = FALSE, message=FALSE, warning=FALSE}
(iqa_p3 <-ggplot(plan_wide_19902020 %>% 
                          filter(ANO_COLETA > "2010" &
                                 ANO_COLETA <= "2020"),
                        aes(CODIGO,
                            IQA, na.rm = TRUE))+
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=-Inf,
            ymax=19,
            alpha=1,
            fill="#ac5079")+ #>pior classe
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=19,
            ymax=36,
            alpha=1,
            fill="#eb5661")+ #classe 4
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=36,
            ymax=51,
            alpha=1,
            fill="#fcf7ab")+ #classe 3
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=51,
            ymax=79,
            alpha=1,
            fill="#70c18c")+ #classe 2
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=79,
            ymax=Inf,
            alpha=1,
            fill="#8dcdeb")+ #classe 1
   stat_boxplot(geom = 'errorbar',
                width=0.3,
                position = position_dodge(width = 0.65),
                na.rm = TRUE)+
   geom_boxplot(fill='#F8F8FF',
                color="black",
                outlier.shape = 1, #se deixar NA fica só o jitter, se não, deixa 1
                width= 0.7,
                na.rm = TRUE)+
   labs(title = "Variação do IQA no período 2010-2020",
        x="Estação",
        y="")+
   # geom_jitter(width = .05,
   #             alpha=.2,
   #             size=1.5,
   #             color="black")+
   scale_y_continuous(expand = expansion(mult = c(0,0)),
                      n.breaks = 6,
                      limits = c(-1,101))+
    scale_x_discrete(limits = c("87398500", "87398980", "87398900", "87398950", "87405500", "87406900", "87409900"))+
   geom_smooth(method = "lm",
               se=FALSE, #se deixar TRUE gera o intervalo de confiança de 95%
               aes(group=1),
               alpha=.5,
               na.rm = TRUE,
               size = 1)+
   # geom_line(aes(color="red"),
   #           alpha=.0)+
   # scale_color_manual("Legenda",
   #                    guide="legend",
   #                    values = c("Ótima"="#8dcdeb",
   #                               "Boa"="#70c18c",
   #                               "Regular"="#fcf7ab",
   #                               "Ruim"="#eb5661",
   #                               "Péssima"="#ac5079"))+
   # guides(color=guide_legend(override.aes = list(linetype=c(1,1,1,1,1),
   #                                               lwd=c(2,2,2,2,2),
   #                                               shape=c(NA,NA,NA,NA,NA),
   #                                               alpha=1)))+
   theme(legend.position = "bottom")+
   theme_classic())
```

```{r Gráfico IQA 3 periodos juntos, warning=FALSE, message=FALSE}
grid.arrange(iqa_p1, iqa_p2, iqa_p3, ncol = 3)
# grid.arrange(dbo_p1, dbo_p2, dbo_p3,
#              iqa_dbo1, iqa_dbo2, iqa_dbo3,
#              ncol = 3, nrow=2)
```

```{r Sumário IQA}
(sum_IQA_p1 <- plan_wide_19902020 %>%
   select(CODIGO, IQA, ANO_COLETA) %>% 
   filter(ANO_COLETA>"1990" &
          ANO_COLETA<="2000") %>% 
   group_by(CODIGO) %>% 
   summarize(
     min = 
       min(IQA, 
           na.rm = TRUE),
     q1 = 
       quantile(IQA, 0.25, 
                na.rm = TRUE),
     median = 
       median(IQA, 
              na.rm = TRUE),
     mean = 
       mean(IQA, 
            na.rm= TRUE),
     q3 = 
       quantile(IQA, 0.75, 
                na.rm = TRUE),
     max = 
       max(IQA, 
           na.rm = TRUE))
)

(sum_IQA_p2 <- plan_wide_19902020 %>%
   select(CODIGO, IQA, ANO_COLETA) %>% 
   filter(ANO_COLETA>"2000" &
          ANO_COLETA<="2010") %>% 
   group_by(CODIGO) %>% 
   summarize(
     min = 
       min(IQA, 
           na.rm = TRUE),
     q1 = 
       quantile(IQA, 0.25, 
                na.rm = TRUE),
     median = 
       median(IQA, 
              na.rm = TRUE),
     mean = 
       mean(IQA, 
            na.rm= TRUE),
     q3 = 
       quantile(IQA, 0.75, 
                na.rm = TRUE),
     max = 
       max(IQA, 
           na.rm = TRUE))
)

(sum_IQA_p3 <- plan_wide_19902020 %>%
   select(CODIGO, IQA, ANO_COLETA) %>% 
   filter(ANO_COLETA>"2010" &
          ANO_COLETA<="2020") %>% 
   group_by(CODIGO) %>% 
   summarize(
     min = 
       min(IQA, 
           na.rm = TRUE),
     q1 = 
       quantile(IQA, 0.25, 
                na.rm = TRUE),
     median = 
       median(IQA, 
              na.rm = TRUE),
     mean = 
       mean(IQA, 
            na.rm= TRUE),
     q3 = 
       quantile(IQA, 0.75, 
                na.rm = TRUE),
     max = 
       max(IQA, 
           na.rm = TRUE),
     n = 
      length(IQA))
)

plan_wide_19902020 %>% 
   select(CODIGO, IQA) %>% 
   group_by(CODIGO) %>% 
   summarize(
      min = 
         min(IQA, 
             na.rm = TRUE),
      q1 = 
         quantile(IQA, 0.25, 
                  na.rm = TRUE),
      median = 
         median(IQA, 
                na.rm = TRUE),
      mean = 
         mean(IQA, 
              na.rm= TRUE),
      q3 = 
         quantile(IQA, 0.75, 
                  na.rm = TRUE),
      max = 
         max(IQA, 
             na.rm = TRUE))
```

```{r Salvando iqa}
ggsave("iqa_p1.png",
       plot = iqa_p1,
       path = "./graficos",
       dpi = 300,
       type = "cairo")

ggsave("iqa_p2.png",
       plot = iqa_p2,
       path = "./graficos",
       dpi = 300,
       type = "cairo")

ggsave("iqa_p3.png",
       plot = iqa_p3,
       path = "./graficos",
       dpi = 300,
       type = "cairo")

ggsave("iqa_3periodos.png",
       units = c("px"),
       width = 4500,
       height = 2993,
       plot = grid.arrange(iqa_p1, iqa_p2, iqa_p3, ncol = 3),
       path = "./graficos",
       dpi = 300,
       type = "cairo")
```

## Testando coisas
```{r Testando coisas, include = FALSE}
# plan_wide_19902020 %>% 
#    select(CODIGO, `Oxigênio dissolvido`, ANO_COLETA) %>% 
#    ggplot(aes(ANO_COLETA, `Oxigênio dissolvido`, 
#       col = CODIGO))+
#    geom_line()+
#    facet_wrap(~ CODIGO, ncol = 7)

# df111 <- data.frame(x = c(1:100))
# glimpse(df111)
# df111$y <- 2 + 3 * df111$x + rnorm(100, sd = 40)
# 
# lm_eqn <- function(df111){
#     m <- lm(y ~ x, df111);
#     eq <- substitute(y == a + b %.% x*","~~r^2~"="~r2,
#          list(a = format(unname(coef(m)[1]), digits = 2),
#               b = format(unname(coef(m)[2]), digits = 2),
#              r2 = format(summary(m)$r.squared, digits = 3)))
#     as.character(as.expression(eq));
# } 
# p2 <- p111 +
#   geom_text(x = 25, y = 300,
#             label = lm_eqn(df111),
#             parse = TRUE)
# p2
# 
# 
# lm_eqc <- function(plan_wide_19902020){
#    m <- lm(`Oxigênio dissolvido` ~ CODIGO, plan_wide_19902020);
#    eq <- substitute(y == a + b %.% x*","~~r^2~"="~r2,
#                     list(a = format(unname(coef(m)[1]), digits = 2),
#                          b = format(unname(coef(m)[2]), digits = 2),
#                          r2 = format(summary(m)$r.squared, digits = 3)))
#    as.character(as.expression(eq));
# }
# 
# (od_p1 <-ggplot(plan_wide_19902020 %>%
#                    filter(ANO_COLETA>"1990" &
#                              ANO_COLETA<="2000"),
#                 aes(CODIGO,
#                     `Oxigênio dissolvido`))+
#       annotate("rect",
#                xmin=-Inf,
#                xmax=Inf,
#                ymin=-Inf,
#                ymax=2,
#                alpha=1,
#                fill="#ac5079")+ #>pior classe
#       annotate("rect",
#                xmin=-Inf,
#                xmax=Inf,
#                ymin=2,
#                ymax=4,
#                alpha=1,
#                fill="#eb5661")+ #classe 4
#       annotate("rect",
#                xmin=-Inf,
#                xmax=Inf,
#                ymin=4,
#                ymax=5,
#                alpha=1,
#                fill="#fcf7ab")+ #classe 3
#       annotate("rect",
#                xmin=-Inf,
#                xmax=Inf,
#                ymin=5,
#                ymax=6,
#                alpha=1,
#                fill="#70c18c")+ #classe 2
#       annotate("rect",
#                xmin=-Inf,
#                xmax=Inf,
#                ymin=6,
#                ymax=Inf,
#                alpha=1,
#                fill="#8dcdeb")+ #classe 1
#       stat_boxplot(geom = 'errorbar',
#                    width=0.3,
#                    position = position_dodge(width = 0.65))+
#       geom_boxplot(fill='#F8F8FF',
#                    color="black",
#                    outlier.shape = 1, #se deixar NA fica só o jitter, se não, deixa 1
#                    width= 0.7)+
#       labs(title = "Oxigênio Dissolvido no período 1990-2000",
#            x="Estação",
#            y="mg/L")+
#       # geom_jitter(width = .05,
#       #             alpha=.2,
#       #             size=1.5,
#       #             color="black")+
#       scale_y_continuous(expand = expansion(mult = c(0,0)),
#                          n.breaks = 11,
#                          limits = c(-1,21))+
#       scale_x_discrete(limits = c("87398500", "87398980", "87398900", "87398950", "87405500", "87406900", "87409900"))+
#       geom_smooth(method = "lm",
#                   se=FALSE, #se deixar TRUE gera o intervalo de confiança de 95%
#                   aes(group=1),
#                   alpha=.5,
#                   na.rm = TRUE,
#                   size = 1)+
#       # annotate(geom_text(aes(x = "87405500", y = 15),
#       #                    label = lm_eqc(plan_wide_19902020),
#       #                    parse = TRUE,
#       #                    inherit.aes = TRUE,
#       #                    check_overlap = TRUE))+
#       #  geom_line(
#       #     aes(color="red"),
#       #     alpha=.0,
#       # )+
#       # scale_color_manual("Legenda",
#       #                    guide="legend",
#       #                    values = c("Classe 1"="#8dcdeb",
#       #                               "Classe 2"="#70c18c",
#       #                               "Classe 3"="#fcf7ab",
#       #                               "Classe 4"="#eb5661",
#       #                               "Pior Classe"="#ac5079"))+
#    # guides(color=guide_legend(override.aes = list(linetype=c(1,1,1,1,1),
#    #                                               lwd=c(2,2,2,2,2),
#    #                                               shape=c(NA,NA,NA,NA,NA),
#    #                                               alpha=1)))+
#       theme(legend.position = "bottom")+
#       theme_classic())

# list1111 <- sessionInfo()
# list1111$loadedOnly

# install.packages("ggpmisc")
# library(ggpmisc)

# summary(lm(plan_wide_19902020$CODIGO~plan_wide_19902020$DBO))
# 
# 
# p <- ggplot(data, aes(y=number, x=pod)) +
#   geom_boxplot()
# print(p)

# install.packages("GGally")


# fit = lm(plan_wide_19902020$`Oxigênio dissolvido`~ plan_wide_19902020$CODIGO)
# summary(fit)
# summary.lm(fit)
# 
# plan_wide_19902020$IQA
# 
# plan_wide_19902020 <- plan_wide_19902020 %>% 
#    mutate(IQA = ifelse(IQA == 0, NA, IQA))
# pacman::p_load(esquisse)
```

### Correlação
```{r Correlação}
library(GGally)
parametros_IQA <- plan_wide_19902020 %>%
  select(CODIGO,
         pH,
         DBO,
         `Nitrogênio amoniacal`,
         `Nitrogênio total`,
         `Fósforo total`,
         `Temperatura água`,
         Turbidez,
         `Sólidos totais`,
         `Oxigênio dissolvido`,
         Condutividade)

write.csv(parametros_IQA,
          "C:\\Users\\Léo\\Desktop\\TCC\\TCC_github\\TCC_gh\\parametros_IQA.csv",
          row.names = FALSE)

parametros_IQA %>% 
  select(-CODIGO) %>% 
  ggcorr(method = "complete.obs",
    label = TRUE,
    label_alpha = TRUE)
```

### Condutividade elétrica

```{r Gráfico cond_elet periodo1, warning = FALSE, message = FALSE}
(cond_elet_p1 <- ggplot(plan_wide_19902020 %>% 
                        filter(ANO_COLETA>"1990" &
                               ANO_COLETA<="2000"),
                      aes(CODIGO,
                          Condutividade))+
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=500,
            ymax=Inf,
            alpha=1,
            fill="#eb5661")+ #classe 4
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=-Inf,
            ymax=500,
            alpha=1,
            fill="#8dcdeb")+ #classe 1
   stat_boxplot(geom = 'errorbar',
                width=0.3,
                position = position_dodge(width = 0.65))+
   geom_boxplot(fill='#F8F8FF',
                color="black",
                outlier.shape = 1, #se deixar NA fica só o jitter, se não, deixa 1
                width= 0.7)+
   labs(title = "Condutividade elétrica no período 1990-2000",
        x="Estação",
        y="")+
   # geom_jitter(width = .05,
   #             alpha=.2,
   #             size=1.5,
   #             color="black")+
    scale_y_continuous(expand = expansion(mult = c(0.01, 0.05)),
                      n.breaks = 8,
                      limits = c(0,
                             max(plan_wide_19902020$Condutividade, na.rm = TRUE)),
                      labels = scales::number_format(accuracy = 1,
                                                     decimal.mark = ",",
                                                     big.mark = " "))+
    scale_x_discrete(limits = c("87398500", "87398980", "87398900", "87398950", "87405500", "87406900", "87409900"))+
   geom_smooth(method = "lm",
               se=FALSE, #se deixar TRUE gera o intervalo de confiança de 95%
               aes(group=1),
               alpha=.5,
               na.rm = TRUE,
               size = 1)+
   # geom_line(aes(color="red"),
   #           alpha=.0)+
   # scale_color_manual("Legenda",
   #                    guide="legend",
   #                    values = c("Pior Classe"="#ac5079",
   #                               "Classe 3"="#fcf7ab",
   #                               "Classe 1"="#8dcdeb"))+
   # guides(color=guide_legend(override.aes = list(linetype=c(1,1,1),
   #                                               lwd=c(2,2,2),
   #                                               shape=c(NA,NA,NA),
   #                                               alpha=1)))+
   theme_classic())
```

```{r Gráfico cond_elet periodo2, warning = FALSE, message = FALSE}
(cond_elet_p2 <- ggplot(plan_wide_19902020 %>% 
                        filter(ANO_COLETA>"2000" &
                               ANO_COLETA<="2010"),
                      aes(CODIGO,
                          Condutividade))+
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=500,
            ymax=Inf,
            alpha=1,
            fill="#eb5661")+ #classe 4
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=-Inf,
            ymax=500,
            alpha=1,
            fill="#8dcdeb")+ #classe 1
   stat_boxplot(geom = 'errorbar',
                width=0.3,
                position = position_dodge(width = 0.65))+
   geom_boxplot(fill='#F8F8FF',
                color="black",
                outlier.shape = 1, #se deixar NA fica só o jitter, se não, deixa 1
                width= 0.7)+
   labs(title = "Condutividade elétrica no período 1990-2000",
        x="Estação",
        y="")+
   # geom_jitter(width = .05,
   #             alpha=.2,
   #             size=1.5,
   #             color="black")+
    scale_y_continuous(expand = expansion(mult = c(0.01, 0.05)),
                      n.breaks = 8,
                      limits = c(0,
                             max(plan_wide_19902020$Condutividade, na.rm = TRUE)),
                      labels = scales::number_format(accuracy = 1,
                                                     decimal.mark = ",",
                                                     big.mark = " "))+
    scale_x_discrete(limits = c("87398500", "87398980", "87398900", "87398950", "87405500", "87406900", "87409900"))+
   geom_smooth(method = "lm",
               se=FALSE, #se deixar TRUE gera o intervalo de confiança de 95%
               aes(group=1),
               alpha=.5,
               na.rm = TRUE,
               size = 1)+
   # geom_line(aes(color="red"),
   #           alpha=.0)+
   # scale_color_manual("Legenda",
   #                    guide="legend",
   #                    values = c("Pior Classe"="#ac5079",
   #                               "Classe 3"="#fcf7ab",
   #                               "Classe 1"="#8dcdeb"))+
   # guides(color=guide_legend(override.aes = list(linetype=c(1,1,1),
   #                                               lwd=c(2,2,2),
   #                                               shape=c(NA,NA,NA),
   #                                               alpha=1)))+
   theme_classic())
```

```{r Gráfico cond_elet periodo3, warning = FALSE, message = FALSE}
(cond_elet_p3 <- ggplot(plan_wide_19902020 %>% 
                        filter(ANO_COLETA>"2010" &
                               ANO_COLETA<="2020"),
                      aes(CODIGO,
                          Condutividade))+
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=500,
            ymax=Inf,
            alpha=1,
            fill="#eb5661")+ #classe 4
   annotate("rect",
            xmin=-Inf,
            xmax=Inf,
            ymin=-Inf,
            ymax=500,
            alpha=1,
            fill="#8dcdeb")+ #classe 1
   stat_boxplot(geom = 'errorbar',
                width=0.3,
                position = position_dodge(width = 0.65))+
   geom_boxplot(fill='#F8F8FF',
                color="black",
                outlier.shape = 1, #se deixar NA fica só o jitter, se não, deixa 1
                width= 0.7)+
   labs(title = "Condutividade elétrica no período 1990-2000",
        x="Estação",
        y="")+
   # geom_jitter(width = .05,
   #             alpha=.2,
   #             size=1.5,
   #             color="black")+
    scale_y_continuous(expand = expansion(mult = c(0.01, 0.05)),
                      n.breaks = 8,
                      limits = c(0,
                             max(plan_wide_19902020$Condutividade, na.rm = TRUE)),
                      labels = scales::number_format(accuracy = 1,
                                                     decimal.mark = ",",
                                                     big.mark = " "))+
    scale_x_discrete(limits = c("87398500", "87398980", "87398900", "87398950", "87405500", "87406900", "87409900"))+
   geom_smooth(method = "lm",
               se=FALSE, #se deixar TRUE gera o intervalo de confiança de 95%
               aes(group=1),
               alpha=.5,
               na.rm = TRUE,
               size = 1)+
   # geom_line(aes(color="red"),
   #           alpha=.0)+
   # scale_color_manual("Legenda",
   #                    guide="legend",
   #                    values = c("Pior Classe"="#ac5079",
   #                               "Classe 3"="#fcf7ab",
   #                               "Classe 1"="#8dcdeb"))+
   # guides(color=guide_legend(override.aes = list(linetype=c(1,1,1),
   #                                               lwd=c(2,2,2),
   #                                               shape=c(NA,NA,NA),
   #                                               alpha=1)))+
   theme_classic())
```

```{r Gráfico cond_elet 3 periodos juntos, warning=FALSE, message=FALSE}
grid.arrange(cond_elet_p1, cond_elet_p2, cond_elet_p3, ncol = 3)
# grid.arrange(dbo_p1, dbo_p2, dbo_p3,
#              iqa_dbo1, iqa_dbo2, iqa_dbo3,
#              ncol = 3, nrow=2)
```

```{r Sumário cond_elet}
(sum_cond_elet_p1 <- plan_wide_19902020 %>%
   select(CODIGO, Condutividade, ANO_COLETA) %>% 
   filter(ANO_COLETA>"1990" &
          ANO_COLETA<="2000") %>% 
   group_by(CODIGO) %>% 
   summarize(
     min = 
       min(Condutividade, 
           na.rm = TRUE),
     q1 = 
       quantile(Condutividade, 0.25, 
                na.rm = TRUE),
     median = 
       median(Condutividade, 
              na.rm = TRUE),
     mean = 
       mean(Condutividade, 
            na.rm= TRUE),
     q3 = 
       quantile(Condutividade, 0.75, 
                na.rm = TRUE),
     max = 
       max(Condutividade, 
           na.rm = TRUE))
)

(sum_cond_elet_p2 <- plan_wide_19902020 %>%
   select(CODIGO, Condutividade, ANO_COLETA) %>% 
   filter(ANO_COLETA>"2000" &
          ANO_COLETA<="2010") %>% 
   group_by(CODIGO) %>% 
   summarize(
     min = 
       min(Condutividade, 
           na.rm = TRUE),
     q1 = 
       quantile(Condutividade, 0.25, 
                na.rm = TRUE),
     median = 
       median(Condutividade, 
              na.rm = TRUE),
     mean = 
       mean(Condutividade, 
            na.rm= TRUE),
     q3 = 
       quantile(Condutividade, 0.75, 
                na.rm = TRUE),
     max = 
       max(Condutividade, 
           na.rm = TRUE))
)

(sum_cond_elet_p3 <- plan_wide_19902020 %>%
   select(CODIGO, Condutividade, ANO_COLETA) %>% 
   filter(ANO_COLETA>"2010" &
          ANO_COLETA<="2020") %>% 
   group_by(CODIGO) %>% 
   summarize(
     min = 
       min(Condutividade, 
           na.rm = TRUE),
     q1 = 
       quantile(Condutividade, 0.25, 
                na.rm = TRUE),
     median = 
       median(Condutividade, 
              na.rm = TRUE),
     mean = 
       mean(Condutividade, 
            na.rm= TRUE),
     q3 = 
       quantile(Condutividade, 0.75, 
                na.rm = TRUE),
     max = 
       max(Condutividade, 
           na.rm = TRUE),
     n = 
      length(Condutividade))
)

# plan_wide_19902020 %>% 
#    select(CODIGO, IQA) %>% 
#    group_by(CODIGO) %>% 
#    summarize(
#       min = 
#          min(IQA, 
#              na.rm = TRUE),
#       q1 = 
#          quantile(IQA, 0.25, 
#                   na.rm = TRUE),
#       median = 
#          median(IQA, 
#                 na.rm = TRUE),
#       mean = 
#          mean(IQA, 
#               na.rm= TRUE),
#       q3 = 
#          quantile(IQA, 0.75, 
#                   na.rm = TRUE),
#       max = 
#          max(IQA, 
#              na.rm = TRUE))
```

```{r Salvando cond_elet}
ggsave("cond_elet_p1.png",
       plot = cond_elet_p1,
       path = "./graficos",
       dpi = 300,
       type = "cairo")

ggsave("cond_elet_p2.png",
       plot = cond_elet_p2,
       path = "./graficos",
       dpi = 300,
       type = "cairo")

ggsave("cond_elet_p3.png",
       plot = cond_elet_p3,
       path = "./graficos",
       dpi = 300,
       type = "cairo")

ggsave("cond_elet_3periodos.png",
       units = c("px"),
       width = 4500,
       height = 2993,
       plot = grid.arrange(cond_elet_p1, cond_elet_p2, cond_elet_p3, ncol = 3),
       path = "./graficos",
       dpi = 300,
       type = "cairo")
```

